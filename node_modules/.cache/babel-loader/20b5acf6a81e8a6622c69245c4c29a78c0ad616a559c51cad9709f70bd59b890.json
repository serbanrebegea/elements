{"ast":null,"code":"var _jsxFileName = \"c:\\\\New folder (2)\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  polygonPoints,\n  closed,\n  placements,\n  margin\n}) {\n  _s();\n  const ref = useRef(),\n    scale = 100;\n  useEffect(() => {\n    const c = ref.current,\n      ctx = c.getContext('2d');\n    c.width = 800;\n    c.height = 600;\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    // draw polygon\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((p, i) => {\n        const X = p.x * scale + 50,\n          Y = p.y * scale + 50;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      if (closed) ctx.closePath();\n      ctx.stroke();\n    }\n\n    // draw tiles\n    placements.forEach(t => {\n      const x = t.x * scale + 50,\n        y = t.y * scale + 50;\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x, y, t.width * scale, t.height * scale);\n      ctx.strokeRect(x, y, t.width * scale, t.height * scale);\n    });\n\n    // draw margin boundary\n    if (placements.length) {\n      // get union bbox\n      let minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n      placements.forEach(t => {\n        minX = Math.min(minX, t.x);\n        minY = Math.min(minY, t.y);\n        maxX = Math.max(maxX, t.x + t.width);\n        maxY = Math.max(maxY, t.y + t.height);\n      });\n      ctx.strokeStyle = '#F00';\n      ctx.setLineDash([6, 4]);\n      ctx.lineWidth = 2;\n      const o = margin * scale,\n        X = minX * scale + 50 - o,\n        Y = minY * scale + 50 - o;\n      const W = (maxX - minX) * scale + 2 * o,\n        H = (maxY - minY) * scale + 2 * o;\n      ctx.strokeRect(X, Y, W, H);\n      ctx.setLineDash([]);\n    }\n  }, [polygonPoints, closed, placements, margin]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: ref,\n    style: {\n      border: '1px solid #333',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_s(LayoutCanvas, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","LayoutCanvas","polygonPoints","closed","placements","margin","_s","ref","scale","c","current","ctx","getContext","width","height","clearRect","length","strokeStyle","lineWidth","beginPath","forEach","p","i","X","x","Y","y","moveTo","lineTo","closePath","stroke","t","fillStyle","fillRect","strokeRect","minX","Infinity","minY","maxX","maxY","Math","min","max","setLineDash","o","W","H","style","border","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/New folder (2)/src/components/LayoutCanvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nexport default function LayoutCanvas({\r\n  polygonPoints, closed,\r\n  placements, margin\r\n}) {\r\n  const ref = useRef(), scale = 100;\r\n  useEffect(()=>{\r\n    const c = ref.current, ctx = c.getContext('2d');\r\n    c.width = 800; c.height = 600;\r\n    ctx.clearRect(0,0,c.width,c.height);\r\n\r\n    // draw polygon\r\n    if(polygonPoints.length){\r\n      ctx.strokeStyle='#0066CC'; ctx.lineWidth=2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p,i)=>{\r\n        const X=p.x*scale+50, Y=p.y*scale+50;\r\n        i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);\r\n      });\r\n      if(closed)ctx.closePath();\r\n      ctx.stroke();\r\n    }\r\n\r\n    // draw tiles\r\n    placements.forEach(t=>{\r\n      const x=t.x*scale+50, y=t.y*scale+50;\r\n      ctx.fillStyle='#DDD'; ctx.strokeStyle='#333'; ctx.lineWidth=1;\r\n      ctx.fillRect(x,y,t.width*scale,t.height*scale);\r\n      ctx.strokeRect(x,y,t.width*scale,t.height*scale);\r\n    });\r\n\r\n    // draw margin boundary\r\n    if(placements.length){\r\n      // get union bbox\r\n      let minX=Infinity,minY=Infinity,maxX=-Infinity,maxY=-Infinity;\r\n      placements.forEach(t=>{\r\n        minX=Math.min(minX,t.x);\r\n        minY=Math.min(minY,t.y);\r\n        maxX=Math.max(maxX,t.x+t.width);\r\n        maxY=Math.max(maxY,t.y+t.height);\r\n      });\r\n      ctx.strokeStyle='#F00'; ctx.setLineDash([6,4]); ctx.lineWidth=2;\r\n      const o=margin*scale, X=minX*scale+50-o, Y=minY*scale+50-o;\r\n      const W=(maxX-minX)*scale+2*o, H=(maxY-minY)*scale+2*o;\r\n      ctx.strokeRect(X,Y,W,H);\r\n      ctx.setLineDash([]);\r\n    }\r\n  },[polygonPoints,closed,placements,margin]);\r\n\r\n  return <canvas ref={ref} style={{border:'1px solid #333',marginTop:20}}/>;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}