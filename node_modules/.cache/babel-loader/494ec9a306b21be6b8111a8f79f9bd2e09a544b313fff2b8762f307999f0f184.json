{"ast":null,"code":"var _jsxFileName = \"c:\\\\apps\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo, useState } from 'react';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  closed,\n  placements,\n  setPlacements,\n  removeTile,\n  margin\n}) {\n  _s();\n  const canvasRef = useRef();\n  const [dragging, setDragging] = useState(null);\n  const scale = 100; // px per meter\n  const snapTol = 0.05; // meters\n\n  // Build inward buffer for containment\n  const innerPoly = useMemo(() => {\n    if (!closed || polygonPoints.length < 3) return null;\n    const pts = polygonPoints.map(p => [p.x, p.y]);\n    pts.push(pts[0]);\n    return turf.buffer(turf.polygon([pts]), -margin, {\n      units: 'meters',\n      steps: 1\n    });\n  }, [polygonPoints, closed, margin]);\n\n  // Containment test\n  function fitsInside(x, y, w, h) {\n    if (!innerPoly) return false;\n    const rect = turf.polygon([[[x, y], [x + w, y], [x + w, y + h], [x, y + h], [x, y]]]);\n    return turf.booleanContains(innerPoly, rect);\n  }\n\n  // Snap to other tiles\n  function applySnap(idx, x, y, w, h) {\n    placements.forEach((t, j) => {\n      if (j === idx) return;\n      [[t.x], [t.x + t.width]].forEach(([sx]) => {\n        if (Math.abs(x - sx) < snapTol) x = sx;\n        if (Math.abs(x + w - sx) < snapTol) x = sx - w;\n      });\n      [[t.y], [t.y + t.height]].forEach(([sy]) => {\n        if (Math.abs(y - sy) < snapTol) y = sy;\n        if (Math.abs(y + h - sy) < snapTol) y = sy - h;\n      });\n    });\n    return {\n      x,\n      y\n    };\n  }\n\n  // Drag & doubleâ€‘click to delete\n  useEffect(() => {\n    const c = canvasRef.current;\n    function toTile(e) {\n      const r = c.getBoundingClientRect();\n      return {\n        mx: (e.clientX - r.left) / scale,\n        my: (e.clientY - r.top) / scale\n      };\n    }\n    function down(e) {\n      const {\n        mx,\n        my\n      } = toTile(e);\n      for (let i = placements.length - 1; i >= 0; i--) {\n        const t = placements[i];\n        if (mx >= t.x && mx <= t.x + t.width && my >= t.y && my <= t.y + t.height) {\n          if (e.detail === 2) {\n            removeTile(i);\n            return;\n          }\n          setDragging({\n            idx: i,\n            offsetX: mx - t.x,\n            offsetY: my - t.y\n          });\n          return;\n        }\n      }\n    }\n    function move(e) {\n      if (!dragging) return;\n      const {\n        mx,\n        my\n      } = toTile(e);\n      const {\n        idx,\n        offsetX,\n        offsetY\n      } = dragging;\n      const t = placements[idx];\n      let nx = mx - offsetX,\n        ny = my - offsetY;\n      ({\n        x: nx,\n        y: ny\n      } = applySnap(idx, nx, ny, t.width, t.height));\n      if (fitsInside(nx, ny, t.width, t.height)) {\n        const np = [...placements];\n        np[idx] = {\n          ...t,\n          x: nx,\n          y: ny\n        };\n        setPlacements(np);\n      }\n    }\n    function up() {\n      if (dragging) setDragging(null);\n    }\n    c.addEventListener('mousedown', down);\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', up);\n    return () => {\n      c.removeEventListener('mousedown', down);\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', up);\n    };\n  }, [dragging, placements, innerPoly]);\n\n  // Render\n  useEffect(() => {\n    const c = canvasRef.current,\n      ctx = c.getContext('2d');\n    c.width = zoneW * scale;\n    c.height = zoneH * scale;\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    // Polygon outline\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((p, i) => {\n        const X = p.x * scale,\n          Y = p.y * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      if (closed) ctx.closePath();\n      ctx.stroke();\n      ctx.fillStyle = '#0066CC';\n      polygonPoints.forEach(p => {\n        ctx.beginPath();\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    }\n\n    // Tiles\n    placements.forEach(t => {\n      const x = t.x * scale,\n        y = t.y * scale;\n      const w = t.width * scale,\n        h = t.height * scale;\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x, y, w, h);\n      ctx.strokeRect(x, y, w, h);\n    });\n    if (!closed || placements.length === 0) return;\n\n    // Red offset outline (unclipped)\n    let unionPoly = null;\n    placements.forEach(t => {\n      const poly = turf.polygon([[[t.x, t.y], [t.x + t.width, t.y], [t.x + t.width, t.y + t.height], [t.x, t.y + t.height], [t.x, t.y]]]);\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\n    });\n    unionPoly = turf.buffer(unionPoly, 1e-6, {\n      units: 'meters'\n    });\n    unionPoly = turf.buffer(unionPoly, -1e-6, {\n      units: 'meters'\n    });\n    const redBuf = turf.buffer(unionPoly, margin, {\n      units: 'meters',\n      steps: 1\n    });\n    const geom = redBuf.geometry;\n    const rings = geom.type === 'Polygon' ? [geom.coordinates[0]] : geom.coordinates.map(p => p[0]);\n    ctx.strokeStyle = 'red';\n    ctx.setLineDash([6, 4]);\n    ctx.lineWidth = 2;\n    rings.forEach(ring => {\n      ctx.beginPath();\n      ring.forEach(([px, py], i) => {\n        const X = px * scale,\n          Y = py * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      ctx.stroke();\n    });\n    ctx.setLineDash([]);\n\n    // Green inward offset\n    ctx.strokeStyle = 'green';\n    ctx.setLineDash([4, 2]);\n    ctx.lineWidth = 2;\n    let area2 = 0;\n    polygonPoints.forEach((p, i) => {\n      const q = polygonPoints[(i + 1) % polygonPoints.length];\n      area2 += p.x * q.y - q.x * p.y;\n    });\n    const ccw = area2 > 0;\n    polygonPoints.forEach((p, i) => {\n      const q = polygonPoints[(i + 1) % polygonPoints.length];\n      const dx = q.x - p.x,\n        dy = q.y - p.y,\n        len = Math.hypot(dx, dy);\n      const nx = ccw ? -dy / len : dy / len;\n      const ny = ccw ? dx / len : -dx / len;\n      const px = (p.x + nx * margin) * scale;\n      const py = (p.y + ny * margin) * scale;\n      const qx = (q.x + nx * margin) * scale;\n      const qy = (q.y + ny * margin) * scale;\n      ctx.beginPath();\n      ctx.moveTo(px, py);\n      ctx.lineTo(qx, qy);\n      ctx.stroke();\n    });\n    ctx.setLineDash([]);\n  }, [zoneW, zoneH, polygonPoints, closed, placements, margin]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #333',\n      cursor: dragging ? 'grabbing' : 'grab',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"kiaGtzYXKhKNH9EKMth3WvM/eXA=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","useState","turf","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","closed","placements","setPlacements","removeTile","margin","_s","canvasRef","dragging","setDragging","scale","snapTol","innerPoly","length","pts","map","p","x","y","push","buffer","polygon","units","steps","fitsInside","w","h","rect","booleanContains","applySnap","idx","forEach","t","j","width","sx","Math","abs","height","sy","c","current","toTile","e","r","getBoundingClientRect","mx","clientX","left","my","clientY","top","down","i","detail","offsetX","offsetY","move","nx","ny","np","up","addEventListener","window","removeEventListener","ctx","getContext","clearRect","strokeStyle","lineWidth","beginPath","X","Y","moveTo","lineTo","closePath","stroke","fillStyle","arc","PI","fill","fillRect","strokeRect","unionPoly","poly","union","redBuf","geom","geometry","rings","type","coordinates","setLineDash","ring","px","py","area2","q","ccw","dx","dy","len","hypot","qx","qy","ref","style","border","cursor","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/apps/src/components/LayoutCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useMemo, useState } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW, zoneH,\r\n  polygonPoints, closed,\r\n  placements, setPlacements,\r\n  removeTile, margin\r\n}) {\r\n  const canvasRef = useRef();\r\n  const [dragging, setDragging] = useState(null);\r\n  const scale = 100;    // px per meter\r\n  const snapTol = 0.05; // meters\r\n\r\n  // Build inward buffer for containment\r\n  const innerPoly = useMemo(() => {\r\n    if (!closed || polygonPoints.length < 3) return null;\r\n    const pts = polygonPoints.map(p=>[p.x,p.y]);\r\n    pts.push(pts[0]);\r\n    return turf.buffer(turf.polygon([pts]), -margin, {\r\n      units:'meters', steps:1\r\n    });\r\n  }, [polygonPoints, closed, margin]);\r\n\r\n  // Containment test\r\n  function fitsInside(x,y,w,h) {\r\n    if (!innerPoly) return false;\r\n    const rect = turf.polygon([[\r\n      [x,y],[x+w,y],[x+w,y+h],[x,y+h],[x,y]\r\n    ]]);\r\n    return turf.booleanContains(innerPoly, rect);\r\n  }\r\n\r\n  // Snap to other tiles\r\n  function applySnap(idx,x,y,w,h) {\r\n    placements.forEach((t,j)=>{\r\n      if (j===idx) return;\r\n      [[t.x],[t.x+t.width]].forEach(([sx])=>{\r\n        if (Math.abs(x-sx)<snapTol) x=sx;\r\n        if (Math.abs(x+w-sx)<snapTol) x=sx-w;\r\n      });\r\n      [[t.y],[t.y+t.height]].forEach(([sy])=>{\r\n        if (Math.abs(y-sy)<snapTol) y=sy;\r\n        if (Math.abs(y+h-sy)<snapTol) y=sy-h;\r\n      });\r\n    });\r\n    return { x,y };\r\n  }\r\n\r\n  // Drag & doubleâ€‘click to delete\r\n  useEffect(()=>{\r\n    const c = canvasRef.current;\r\n    function toTile(e) {\r\n      const r = c.getBoundingClientRect();\r\n      return { mx:(e.clientX-r.left)/scale, my:(e.clientY-r.top)/scale };\r\n    }\r\n    function down(e){\r\n      const {mx,my} = toTile(e);\r\n      for (let i=placements.length-1; i>=0; i--) {\r\n        const t = placements[i];\r\n        if (mx>=t.x && mx<=t.x+t.width &&\r\n            my>=t.y && my<=t.y+t.height) {\r\n          if (e.detail===2) { removeTile(i); return; }\r\n          setDragging({ idx:i, offsetX:mx-t.x, offsetY:my-t.y });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    function move(e){\r\n      if (!dragging) return;\r\n      const {mx,my} = toTile(e);\r\n      const {idx,offsetX,offsetY} = dragging;\r\n      const t = placements[idx];\r\n      let nx=mx-offsetX, ny=my-offsetY;\r\n      ({x:nx,y:ny} = applySnap(idx,nx,ny,t.width,t.height));\r\n      if (fitsInside(nx,ny,t.width,t.height)) {\r\n        const np=[...placements];\r\n        np[idx] = {...t, x:nx, y:ny};\r\n        setPlacements(np);\r\n      }\r\n    }\r\n    function up(){ if (dragging) setDragging(null); }\r\n\r\n    c.addEventListener('mousedown',down);\r\n    window.addEventListener ('mousemove',move);\r\n    window.addEventListener ('mouseup',up);\r\n    return ()=>{\r\n      c.removeEventListener('mousedown',down);\r\n      window.removeEventListener ('mousemove',move);\r\n      window.removeEventListener ('mouseup',up);\r\n    };\r\n  }, [dragging, placements, innerPoly]);\r\n\r\n  // Render\r\n  useEffect(()=>{\r\n    const c = canvasRef.current, ctx = c.getContext('2d');\r\n    c.width = zoneW * scale;\r\n    c.height= zoneH * scale;\r\n    ctx.clearRect(0,0,c.width,c.height);\r\n\r\n    // Polygon outline\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC'; ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p,i)=>{\r\n        const X=p.x*scale, Y=p.y*scale;\r\n        i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);\r\n      });\r\n      if (closed) ctx.closePath();\r\n      ctx.stroke();\r\n      ctx.fillStyle = '#0066CC';\r\n      polygonPoints.forEach(p=>{\r\n        ctx.beginPath();\r\n        ctx.arc(p.x*scale,p.y*scale,4,0,2*Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // Tiles\r\n    placements.forEach(t=>{\r\n      const x=t.x*scale, y=t.y*scale;\r\n      const w=t.width*scale, h=t.height*scale;\r\n      ctx.fillStyle='#DDD';\r\n      ctx.strokeStyle='#333';\r\n      ctx.lineWidth=1;\r\n      ctx.fillRect(x,y,w,h);\r\n      ctx.strokeRect(x,y,w,h);\r\n    });\r\n\r\n    if (!closed || placements.length===0) return;\r\n\r\n    // Red offset outline (unclipped)\r\n    let unionPoly = null;\r\n    placements.forEach(t=>{\r\n      const poly = turf.polygon([[\r\n        [t.x,t.y],\r\n        [t.x+t.width,t.y],\r\n        [t.x+t.width,t.y+t.height],\r\n        [t.x,t.y+t.height],\r\n        [t.x,t.y]\r\n      ]]);\r\n      unionPoly = unionPoly ? turf.union(unionPoly,poly) : poly;\r\n    });\r\n    unionPoly = turf.buffer(unionPoly,1e-6,{units:'meters'});\r\n    unionPoly = turf.buffer(unionPoly,-1e-6,{units:'meters'});\r\n    const redBuf = turf.buffer(unionPoly,margin,{units:'meters',steps:1});\r\n    const geom = redBuf.geometry;\r\n    const rings = geom.type==='Polygon'\r\n      ? [geom.coordinates[0]]\r\n      : geom.coordinates.map(p=>p[0]);\r\n    ctx.strokeStyle='red'; ctx.setLineDash([6,4]); ctx.lineWidth=2;\r\n    rings.forEach(ring=>{\r\n      ctx.beginPath();\r\n      ring.forEach(([px,py],i)=>{\r\n        const X=px*scale, Y=py*scale;\r\n        i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);\r\n      });\r\n      ctx.stroke();\r\n    });\r\n    ctx.setLineDash([]);\r\n\r\n    // Green inward offset\r\n    ctx.strokeStyle='green'; ctx.setLineDash([4,2]); ctx.lineWidth=2;\r\n    let area2=0;\r\n    polygonPoints.forEach((p,i)=>{\r\n      const q=polygonPoints[(i+1)%polygonPoints.length];\r\n      area2 += p.x*q.y - q.x*p.y;\r\n    });\r\n    const ccw = area2 > 0;\r\n    polygonPoints.forEach((p,i)=>{\r\n      const q=polygonPoints[(i+1)%polygonPoints.length];\r\n      const dx=q.x-p.x, dy=q.y-p.y, len=Math.hypot(dx,dy);\r\n      const nx=ccw?-dy/len:dy/len;\r\n      const ny=ccw?dx/len:-dx/len;\r\n      const px=(p.x+nx*margin)*scale;\r\n      const py=(p.y+ny*margin)*scale;\r\n      const qx=(q.x+nx*margin)*scale;\r\n      const qy=(q.y+ny*margin)*scale;\r\n      ctx.beginPath();\r\n      ctx.moveTo(px,py);\r\n      ctx.lineTo(qx,qy);\r\n      ctx.stroke();\r\n    });\r\n    ctx.setLineDash([]);\r\n\r\n  }, [zoneW, zoneH, polygonPoints, closed, placements, margin]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{\r\n        border:'1px solid #333',\r\n        cursor: dragging ? 'grabbing' : 'grab',\r\n        marginTop:20\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}