{"ast":null,"code":"var _jsxFileName = \"c:\\\\apps\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\n// src/components/LayoutCanvas.js\n\nimport React, { useRef, useEffect } from 'react';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  closed,\n  placements,\n  setPlacements,\n  margin // in meters, e.g. 0.207\n}) {\n  _s();\n  const canvasRef = useRef();\n  const scale = 100; // px per meter\n\n  // Draw everything: polygon, tiles, and **tile‑shape buffer** at `margin`\n  useEffect(() => {\n    const c = canvasRef.current;\n    const ctx = c.getContext('2d');\n    c.width = zoneW * scale;\n    c.height = zoneH * scale;\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    // 1) Draw polygon outline & vertices\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((p, i) => {\n        const X = p.x * scale,\n          Y = p.y * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      if (closed) ctx.closePath();\n      ctx.stroke();\n      ctx.fillStyle = '#0066CC';\n      polygonPoints.forEach(p => {\n        ctx.beginPath();\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    }\n\n    // 2) Draw tiles\n    placements.forEach(t => {\n      const x = t.x * scale,\n        y = t.y * scale;\n      const w = t.width * scale,\n        h = t.height * scale;\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x, y, w, h);\n      ctx.strokeRect(x, y, w, h);\n    });\n    if (!closed || placements.length === 0) return;\n\n    // 3) Build union of tile rectangles\n    let unionPoly = null;\n    placements.forEach(t => {\n      const poly = turf.polygon([[[t.x, t.y], [t.x + t.width, t.y], [t.x + t.width, t.y + t.height], [t.x, t.y + t.height], [t.x, t.y]]]);\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\n    });\n\n    // 4) Buffer outward by exactly `margin` and draw it\n    const buffered = turf.buffer(unionPoly, margin, {\n      units: 'meters'\n    });\n    if (buffered && buffered.geometry) {\n      ctx.strokeStyle = '#F00';\n      ctx.setLineDash([6, 4]);\n      ctx.lineWidth = 2;\n      const drawRing = coords => {\n        ctx.beginPath();\n        coords.forEach(([px, py], i) => {\n          const X = px * scale,\n            Y = py * scale;\n          i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n        });\n        ctx.closePath();\n        ctx.stroke();\n      };\n      const geom = buffered.geometry;\n      if (geom.type === 'Polygon') {\n        drawRing(geom.coordinates[0]);\n      } else {\n        // MultiPolygon\n        geom.coordinates.forEach(polyCoords => drawRing(polyCoords[0]));\n      }\n      ctx.setLineDash([]);\n    }\n  }, [zoneW, zoneH, polygonPoints, closed, placements, margin]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #333',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","turf","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","closed","placements","setPlacements","margin","_s","canvasRef","scale","c","current","ctx","getContext","width","height","clearRect","length","strokeStyle","lineWidth","beginPath","forEach","p","i","X","x","Y","y","moveTo","lineTo","closePath","stroke","fillStyle","arc","Math","PI","fill","t","w","h","fillRect","strokeRect","unionPoly","poly","polygon","union","buffered","buffer","units","geometry","setLineDash","drawRing","coords","px","py","geom","type","coordinates","polyCoords","ref","style","border","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/apps/src/components/LayoutCanvas.js"],"sourcesContent":["// src/components/LayoutCanvas.js\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW,\r\n  zoneH,\r\n  polygonPoints,\r\n  closed,\r\n  placements,\r\n  setPlacements,\r\n  margin  // in meters, e.g. 0.207\r\n}) {\r\n  const canvasRef = useRef();\r\n  const scale = 100; // px per meter\r\n\r\n  // Draw everything: polygon, tiles, and **tile‑shape buffer** at `margin`\r\n  useEffect(() => {\r\n    const c = canvasRef.current;\r\n    const ctx = c.getContext('2d');\r\n    c.width  = zoneW * scale;\r\n    c.height = zoneH * scale;\r\n    ctx.clearRect(0, 0, c.width, c.height);\r\n\r\n    // 1) Draw polygon outline & vertices\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC';\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p, i) => {\r\n        const X = p.x * scale, Y = p.y * scale;\r\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\r\n      });\r\n      if (closed) ctx.closePath();\r\n      ctx.stroke();\r\n\r\n      ctx.fillStyle = '#0066CC';\r\n      polygonPoints.forEach(p => {\r\n        ctx.beginPath();\r\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // 2) Draw tiles\r\n    placements.forEach(t => {\r\n      const x = t.x * scale, y = t.y * scale;\r\n      const w = t.width * scale, h = t.height * scale;\r\n      ctx.fillStyle   = '#DDD';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth   = 1;\r\n      ctx.fillRect(x, y, w, h);\r\n      ctx.strokeRect(x, y, w, h);\r\n    });\r\n\r\n    if (!closed || placements.length === 0) return;\r\n\r\n    // 3) Build union of tile rectangles\r\n    let unionPoly = null;\r\n    placements.forEach(t => {\r\n      const poly = turf.polygon([[\r\n        [t.x,             t.y],\r\n        [t.x + t.width,   t.y],\r\n        [t.x + t.width,   t.y + t.height],\r\n        [t.x,             t.y + t.height],\r\n        [t.x,             t.y]\r\n      ]]);\r\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\r\n    });\r\n\r\n    // 4) Buffer outward by exactly `margin` and draw it\r\n    const buffered = turf.buffer(unionPoly, margin, { units: 'meters' });\r\n    if (buffered && buffered.geometry) {\r\n      ctx.strokeStyle = '#F00';\r\n      ctx.setLineDash([6, 4]);\r\n      ctx.lineWidth = 2;\r\n\r\n      const drawRing = coords => {\r\n        ctx.beginPath();\r\n        coords.forEach(([px, py], i) => {\r\n          const X = px * scale, Y = py * scale;\r\n          i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\r\n        });\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n      };\r\n\r\n      const geom = buffered.geometry;\r\n      if (geom.type === 'Polygon') {\r\n        drawRing(geom.coordinates[0]);\r\n      } else { // MultiPolygon\r\n        geom.coordinates.forEach(polyCoords => drawRing(polyCoords[0]));\r\n      }\r\n\r\n      ctx.setLineDash([]);\r\n    }\r\n  }, [\r\n    zoneW,\r\n    zoneH,\r\n    polygonPoints,\r\n    closed,\r\n    placements,\r\n    margin\r\n  ]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid #333', marginTop: 20 }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}