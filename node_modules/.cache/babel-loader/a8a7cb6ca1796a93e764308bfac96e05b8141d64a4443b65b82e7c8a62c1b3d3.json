{"ast":null,"code":"var _jsxFileName = \"c:\\\\apps\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  closed,\n  placements,\n  setPlacements,\n  margin\n}) {\n  _s();\n  const canvasRef = useRef();\n  const [dragging, setDragging] = useState(null); // { idx, offsetX, offsetY }\n  const scale = 100; // px per meter\n  const snapTol = 0.05; // meters\n\n  // Precompute the inward‐buffered polygon for hit‐testing\n  const innerPoly = React.useMemo(() => {\n    if (!closed || polygonPoints.length < 3) return null;\n    const coords = polygonPoints.map(p => [p.x, p.y]);\n    coords.push(coords[0]);\n    const room = turf.polygon([coords]);\n    const inner = turf.buffer(room, -margin, {\n      units: 'meters'\n    });\n    return inner && inner.geometry ? inner : null;\n  }, [polygonPoints, closed, margin]);\n\n  // Check if a tile rectangle sits fully inside innerPoly\n  function fitsInside(x, y, w, h) {\n    if (!innerPoly) return false;\n    const rect = turf.polygon([[[x, y], [x + w, y], [x + w, y + h], [x, y + h], [x, y]]]);\n    return turf.booleanContains(innerPoly, rect);\n  }\n\n  // Snap a candidate (x,y) to any tile edge if within snapTol\n  function applySnap(idx, x, y, w, h) {\n    // only snap to other tiles\n    placements.forEach((t, j) => {\n      if (j === idx) return;\n      // vertical snap edges\n      [[t.x, 'left'], [t.x + t.width, 'right']].forEach(([sx, side]) => {\n        if (Math.abs(x - sx) < snapTol) {\n          x = sx;\n        }\n        if (Math.abs(x + w - sx) < snapTol) {\n          x = sx - w;\n        }\n      });\n      // horizontal snap edges\n      [[t.y, 'top'], [t.y + t.height, 'bottom']].forEach(([sy, side]) => {\n        if (Math.abs(y - sy) < snapTol) {\n          y = sy;\n        }\n        if (Math.abs(y + h - sy) < snapTol) {\n          y = sy - h;\n        }\n      });\n    });\n    return {\n      x,\n      y\n    };\n  }\n\n  // Mouse events\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const rect = () => canvas.getBoundingClientRect();\n    function toTileCoord(e) {\n      const r = rect();\n      const mx = (e.clientX - r.left) / scale;\n      const my = (e.clientY - r.top) / scale;\n      return {\n        mx,\n        my\n      };\n    }\n    function onMouseDown(e) {\n      const {\n        mx,\n        my\n      } = toTileCoord(e);\n      // find topmost tile under (mx,my)\n      for (let i = placements.length - 1; i >= 0; i--) {\n        const t = placements[i];\n        if (mx >= t.x && mx <= t.x + t.width && my >= t.y && my <= t.y + t.height) {\n          setDragging({\n            idx: i,\n            offsetX: mx - t.x,\n            offsetY: my - t.y\n          });\n          return;\n        }\n      }\n    }\n    function onMouseMove(e) {\n      if (!dragging) return;\n      const {\n        mx,\n        my\n      } = toTileCoord(e);\n      const {\n        idx,\n        offsetX,\n        offsetY\n      } = dragging;\n      const t = placements[idx];\n      let nx = mx - offsetX;\n      let ny = my - offsetY;\n      // apply snapping\n      ({\n        x: nx,\n        y: ny\n      } = applySnap(idx, nx, ny, t.width, t.height));\n      // enforce inside constraint\n      if (fitsInside(nx, ny, t.width, t.height)) {\n        const newPl = placements.slice();\n        newPl[idx] = {\n          ...t,\n          x: nx,\n          y: ny\n        };\n        setPlacements(newPl);\n      }\n    }\n    function onMouseUp() {\n      if (dragging) {\n        setDragging(null);\n      }\n    }\n    canvas.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n    return () => {\n      canvas.removeEventListener('mousedown', onMouseDown);\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [dragging, placements, fitsInside]);\n\n  // Drawing\n  useEffect(() => {\n    const c = canvasRef.current;\n    const ctx = c.getContext('2d');\n    c.width = zoneW * scale;\n    c.height = zoneH * scale;\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    // Draw polygon\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((p, i) => {\n        const X = p.x * scale,\n          Y = p.y * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      if (closed) ctx.closePath();\n      ctx.stroke();\n      ctx.fillStyle = '#0066CC';\n      polygonPoints.forEach(p => {\n        ctx.beginPath();\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    }\n\n    // Draw tiles\n    placements.forEach(t => {\n      const x = t.x * scale,\n        y = t.y * scale;\n      const w = t.width * scale,\n        h = t.height * scale;\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x, y, w, h);\n      ctx.strokeRect(x, y, w, h);\n    });\n  }, [zoneW, zoneH, polygonPoints, closed, placements]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #333',\n      cursor: dragging ? 'grabbing' : 'grab'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"kiaGtzYXKhKNH9EKMth3WvM/eXA=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","turf","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","closed","placements","setPlacements","margin","_s","canvasRef","dragging","setDragging","scale","snapTol","innerPoly","useMemo","length","coords","map","p","x","y","push","room","polygon","inner","buffer","units","geometry","fitsInside","w","h","rect","booleanContains","applySnap","idx","forEach","t","j","width","sx","side","Math","abs","height","sy","canvas","current","getBoundingClientRect","toTileCoord","e","r","mx","clientX","left","my","clientY","top","onMouseDown","i","offsetX","offsetY","onMouseMove","nx","ny","newPl","slice","onMouseUp","addEventListener","window","removeEventListener","c","ctx","getContext","clearRect","strokeStyle","lineWidth","beginPath","X","Y","moveTo","lineTo","closePath","stroke","fillStyle","arc","PI","fill","fillRect","strokeRect","ref","style","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/apps/src/components/LayoutCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW,\r\n  zoneH,\r\n  polygonPoints,\r\n  closed,\r\n  placements,\r\n  setPlacements,\r\n  margin\r\n}) {\r\n  const canvasRef = useRef();\r\n  const [dragging, setDragging] = useState(null); // { idx, offsetX, offsetY }\r\n  const scale = 100; // px per meter\r\n  const snapTol = 0.05; // meters\r\n\r\n  // Precompute the inward‐buffered polygon for hit‐testing\r\n  const innerPoly = React.useMemo(() => {\r\n    if (!closed || polygonPoints.length < 3) return null;\r\n    const coords = polygonPoints.map(p => [p.x, p.y]);\r\n    coords.push(coords[0]);\r\n    const room = turf.polygon([coords]);\r\n    const inner = turf.buffer(room, -margin, { units: 'meters' });\r\n    return inner && inner.geometry ? inner : null;\r\n  }, [polygonPoints, closed, margin]);\r\n\r\n  // Check if a tile rectangle sits fully inside innerPoly\r\n  function fitsInside(x, y, w, h) {\r\n    if (!innerPoly) return false;\r\n    const rect = turf.polygon([[\r\n      [x,     y],\r\n      [x + w, y],\r\n      [x + w, y + h],\r\n      [x,     y + h],\r\n      [x,     y]\r\n    ]]);\r\n    return turf.booleanContains(innerPoly, rect);\r\n  }\r\n\r\n  // Snap a candidate (x,y) to any tile edge if within snapTol\r\n  function applySnap(idx, x, y, w, h) {\r\n    // only snap to other tiles\r\n    placements.forEach((t, j) => {\r\n      if (j === idx) return;\r\n      // vertical snap edges\r\n      [[t.x, 'left'], [t.x + t.width, 'right']].forEach(([sx, side]) => {\r\n        if (Math.abs((x) - sx) < snapTol) {\r\n          x = sx;\r\n        }\r\n        if (Math.abs((x + w) - sx) < snapTol) {\r\n          x = sx - w;\r\n        }\r\n      });\r\n      // horizontal snap edges\r\n      [[t.y, 'top'], [t.y + t.height, 'bottom']].forEach(([sy, side]) => {\r\n        if (Math.abs((y) - sy) < snapTol) {\r\n          y = sy;\r\n        }\r\n        if (Math.abs((y + h) - sy) < snapTol) {\r\n          y = sy - h;\r\n        }\r\n      });\r\n    });\r\n    return { x, y };\r\n  }\r\n\r\n  // Mouse events\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const rect = () => canvas.getBoundingClientRect();\r\n\r\n    function toTileCoord(e) {\r\n      const r = rect();\r\n      const mx = (e.clientX - r.left) / scale;\r\n      const my = (e.clientY - r.top) / scale;\r\n      return { mx, my };\r\n    }\r\n\r\n    function onMouseDown(e) {\r\n      const { mx, my } = toTileCoord(e);\r\n      // find topmost tile under (mx,my)\r\n      for (let i = placements.length - 1; i >= 0; i--) {\r\n        const t = placements[i];\r\n        if (\r\n          mx >= t.x &&\r\n          mx <= t.x + t.width &&\r\n          my >= t.y &&\r\n          my <= t.y + t.height\r\n        ) {\r\n          setDragging({\r\n            idx: i,\r\n            offsetX: mx - t.x,\r\n            offsetY: my - t.y\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMouseMove(e) {\r\n      if (!dragging) return;\r\n      const { mx, my } = toTileCoord(e);\r\n      const { idx, offsetX, offsetY } = dragging;\r\n      const t = placements[idx];\r\n      let nx = mx - offsetX;\r\n      let ny = my - offsetY;\r\n      // apply snapping\r\n      ({ x: nx, y: ny } = applySnap(idx, nx, ny, t.width, t.height));\r\n      // enforce inside constraint\r\n      if (fitsInside(nx, ny, t.width, t.height)) {\r\n        const newPl = placements.slice();\r\n        newPl[idx] = { ...t, x: nx, y: ny };\r\n        setPlacements(newPl);\r\n      }\r\n    }\r\n\r\n    function onMouseUp() {\r\n      if (dragging) {\r\n        setDragging(null);\r\n      }\r\n    }\r\n\r\n    canvas.addEventListener('mousedown', onMouseDown);\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    window.addEventListener('mouseup', onMouseUp);\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', onMouseDown);\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      window.removeEventListener('mouseup', onMouseUp);\r\n    };\r\n  }, [dragging, placements, fitsInside]);\r\n\r\n  // Drawing\r\n  useEffect(() => {\r\n    const c = canvasRef.current;\r\n    const ctx = c.getContext('2d');\r\n    c.width  = zoneW * scale;\r\n    c.height = zoneH * scale;\r\n    ctx.clearRect(0, 0, c.width, c.height);\r\n\r\n    // Draw polygon\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC';\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p, i) => {\r\n        const X = p.x * scale, Y = p.y * scale;\r\n        i === 0 ? ctx.moveTo(X,Y) : ctx.lineTo(X,Y);\r\n      });\r\n      if (closed) ctx.closePath();\r\n      ctx.stroke();\r\n      ctx.fillStyle = '#0066CC';\r\n      polygonPoints.forEach(p => {\r\n        ctx.beginPath();\r\n        ctx.arc(p.x*scale, p.y*scale, 4, 0, 2*Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // Draw tiles\r\n    placements.forEach(t => {\r\n      const x = t.x * scale, y = t.y * scale;\r\n      const w = t.width * scale, h = t.height * scale;\r\n      ctx.fillStyle   = '#DDD';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth   = 1;\r\n      ctx.fillRect(x, y, w, h);\r\n      ctx.strokeRect(x, y, w, h);\r\n    });\r\n  }, [zoneW, zoneH, polygonPoints, closed, placements]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid #333', cursor: dragging ? 'grabbing' : 'grab' }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}