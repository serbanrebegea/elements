{"ast":null,"code":"import React,{useRef,useEffect,useMemo,useState}from'react';import*as turf from'@turf/turf';import{jsx as _jsx}from\"react/jsx-runtime\";export default function LayoutCanvas(_ref){let{zoneW,zoneH,polygonPoints,closed,placements,setPlacements,removeTile,margin}=_ref;const canvasRef=useRef();const[dragging,setDragging]=useState(null);const scale=100;// px per meter\nconst snapTol=0.05;// meters\n// Build inward buffer for containment\nconst innerPoly=useMemo(()=>{if(!closed||polygonPoints.length<3)return null;const pts=polygonPoints.map(p=>[p.x,p.y]);pts.push(pts[0]);return turf.buffer(turf.polygon([pts]),-margin,{units:'meters',steps:1});},[polygonPoints,closed,margin]);// Containment test\nfunction fitsInside(x,y,w,h){if(!innerPoly)return false;const rect=turf.polygon([[[x,y],[x+w,y],[x+w,y+h],[x,y+h],[x,y]]]);return turf.booleanContains(innerPoly,rect);}// Snap to other tiles\nfunction applySnap(idx,x,y,w,h){placements.forEach((t,j)=>{if(j===idx)return;[[t.x],[t.x+t.width]].forEach(_ref2=>{let[sx]=_ref2;if(Math.abs(x-sx)<snapTol)x=sx;if(Math.abs(x+w-sx)<snapTol)x=sx-w;});[[t.y],[t.y+t.height]].forEach(_ref3=>{let[sy]=_ref3;if(Math.abs(y-sy)<snapTol)y=sy;if(Math.abs(y+h-sy)<snapTol)y=sy-h;});});return{x,y};}// Drag & double‑click to delete\nuseEffect(()=>{const c=canvasRef.current;function toTile(e){const r=c.getBoundingClientRect();return{mx:(e.clientX-r.left)/scale,my:(e.clientY-r.top)/scale};}function down(e){const{mx,my}=toTile(e);for(let i=placements.length-1;i>=0;i--){const t=placements[i];if(mx>=t.x&&mx<=t.x+t.width&&my>=t.y&&my<=t.y+t.height){if(e.detail===2){removeTile(i);return;}setDragging({idx:i,offsetX:mx-t.x,offsetY:my-t.y});return;}}}function move(e){if(!dragging)return;const{mx,my}=toTile(e);const{idx,offsetX,offsetY}=dragging;const t=placements[idx];let nx=mx-offsetX,ny=my-offsetY;({x:nx,y:ny}=applySnap(idx,nx,ny,t.width,t.height));if(fitsInside(nx,ny,t.width,t.height)){const np=[...placements];np[idx]={...t,x:nx,y:ny};setPlacements(np);}}function up(){if(dragging)setDragging(null);}c.addEventListener('mousedown',down);window.addEventListener('mousemove',move);window.addEventListener('mouseup',up);return()=>{c.removeEventListener('mousedown',down);window.removeEventListener('mousemove',move);window.removeEventListener('mouseup',up);};},[dragging,placements,innerPoly]);// Render\nuseEffect(()=>{const c=canvasRef.current,ctx=c.getContext('2d');c.width=zoneW*scale;c.height=zoneH*scale;ctx.clearRect(0,0,c.width,c.height);// Polygon outline\nif(polygonPoints.length){ctx.strokeStyle='#0066CC';ctx.lineWidth=2;ctx.beginPath();polygonPoints.forEach((p,i)=>{const X=p.x*scale,Y=p.y*scale;i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);});if(closed)ctx.closePath();ctx.stroke();ctx.fillStyle='#0066CC';polygonPoints.forEach(p=>{ctx.beginPath();ctx.arc(p.x*scale,p.y*scale,4,0,2*Math.PI);ctx.fill();});}// Tiles\nplacements.forEach(t=>{const x=t.x*scale,y=t.y*scale;const w=t.width*scale,h=t.height*scale;ctx.fillStyle='#DDD';ctx.strokeStyle='#333';ctx.lineWidth=1;ctx.fillRect(x,y,w,h);ctx.strokeRect(x,y,w,h);});if(!closed||placements.length===0)return;// Red offset outline (unclipped)\nlet unionPoly=null;placements.forEach(t=>{const poly=turf.polygon([[[t.x,t.y],[t.x+t.width,t.y],[t.x+t.width,t.y+t.height],[t.x,t.y+t.height],[t.x,t.y]]]);unionPoly=unionPoly?turf.union(unionPoly,poly):poly;});unionPoly=turf.buffer(unionPoly,1e-6,{units:'meters'});unionPoly=turf.buffer(unionPoly,-1e-6,{units:'meters'});const redBuf=turf.buffer(unionPoly,margin,{units:'meters',steps:1});const geom=redBuf.geometry;const rings=geom.type==='Polygon'?[geom.coordinates[0]]:geom.coordinates.map(p=>p[0]);ctx.strokeStyle='red';ctx.setLineDash([6,4]);ctx.lineWidth=2;rings.forEach(ring=>{ctx.beginPath();ring.forEach((_ref4,i)=>{let[px,py]=_ref4;const X=px*scale,Y=py*scale;i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);});ctx.stroke();});ctx.setLineDash([]);// Green inward offset\nctx.strokeStyle='green';ctx.setLineDash([4,2]);ctx.lineWidth=2;let area2=0;polygonPoints.forEach((p,i)=>{const q=polygonPoints[(i+1)%polygonPoints.length];area2+=p.x*q.y-q.x*p.y;});const ccw=area2>0;polygonPoints.forEach((p,i)=>{const q=polygonPoints[(i+1)%polygonPoints.length];const dx=q.x-p.x,dy=q.y-p.y,len=Math.hypot(dx,dy);const nx=ccw?-dy/len:dy/len;const ny=ccw?dx/len:-dx/len;const px=(p.x+nx*margin)*scale;const py=(p.y+ny*margin)*scale;const qx=(q.x+nx*margin)*scale;const qy=(q.y+ny*margin)*scale;ctx.beginPath();ctx.moveTo(px,py);ctx.lineTo(qx,qy);ctx.stroke();});ctx.setLineDash([]);},[zoneW,zoneH,polygonPoints,closed,placements,margin]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{border:'1px solid #333',cursor:dragging?'grabbing':'grab',marginTop:20}});}","map":{"version":3,"names":["React","useRef","useEffect","useMemo","useState","turf","jsx","_jsx","LayoutCanvas","_ref","zoneW","zoneH","polygonPoints","closed","placements","setPlacements","removeTile","margin","canvasRef","dragging","setDragging","scale","snapTol","innerPoly","length","pts","map","p","x","y","push","buffer","polygon","units","steps","fitsInside","w","h","rect","booleanContains","applySnap","idx","forEach","t","j","width","_ref2","sx","Math","abs","height","_ref3","sy","c","current","toTile","e","r","getBoundingClientRect","mx","clientX","left","my","clientY","top","down","i","detail","offsetX","offsetY","move","nx","ny","np","up","addEventListener","window","removeEventListener","ctx","getContext","clearRect","strokeStyle","lineWidth","beginPath","X","Y","moveTo","lineTo","closePath","stroke","fillStyle","arc","PI","fill","fillRect","strokeRect","unionPoly","poly","union","redBuf","geom","geometry","rings","type","coordinates","setLineDash","ring","_ref4","px","py","area2","q","ccw","dx","dy","len","hypot","qx","qy","ref","style","border","cursor","marginTop"],"sources":["c:/apps/src/components/LayoutCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useMemo, useState } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW, zoneH,\r\n  polygonPoints, closed,\r\n  placements, setPlacements,\r\n  removeTile, margin\r\n}) {\r\n  const canvasRef = useRef();\r\n  const [dragging, setDragging] = useState(null);\r\n  const scale = 100;    // px per meter\r\n  const snapTol = 0.05; // meters\r\n\r\n  // Build inward buffer for containment\r\n  const innerPoly = useMemo(() => {\r\n    if (!closed || polygonPoints.length < 3) return null;\r\n    const pts = polygonPoints.map(p=>[p.x,p.y]);\r\n    pts.push(pts[0]);\r\n    return turf.buffer(turf.polygon([pts]), -margin, {\r\n      units:'meters', steps:1\r\n    });\r\n  }, [polygonPoints, closed, margin]);\r\n\r\n  // Containment test\r\n  function fitsInside(x,y,w,h) {\r\n    if (!innerPoly) return false;\r\n    const rect = turf.polygon([[\r\n      [x,y],[x+w,y],[x+w,y+h],[x,y+h],[x,y]\r\n    ]]);\r\n    return turf.booleanContains(innerPoly, rect);\r\n  }\r\n\r\n  // Snap to other tiles\r\n  function applySnap(idx,x,y,w,h) {\r\n    placements.forEach((t,j)=>{\r\n      if (j===idx) return;\r\n      [[t.x],[t.x+t.width]].forEach(([sx])=>{\r\n        if (Math.abs(x-sx)<snapTol) x=sx;\r\n        if (Math.abs(x+w-sx)<snapTol) x=sx-w;\r\n      });\r\n      [[t.y],[t.y+t.height]].forEach(([sy])=>{\r\n        if (Math.abs(y-sy)<snapTol) y=sy;\r\n        if (Math.abs(y+h-sy)<snapTol) y=sy-h;\r\n      });\r\n    });\r\n    return { x,y };\r\n  }\r\n\r\n  // Drag & double‑click to delete\r\n  useEffect(()=>{\r\n    const c = canvasRef.current;\r\n    function toTile(e) {\r\n      const r = c.getBoundingClientRect();\r\n      return { mx:(e.clientX-r.left)/scale, my:(e.clientY-r.top)/scale };\r\n    }\r\n    function down(e){\r\n      const {mx,my} = toTile(e);\r\n      for (let i=placements.length-1; i>=0; i--) {\r\n        const t = placements[i];\r\n        if (mx>=t.x && mx<=t.x+t.width &&\r\n            my>=t.y && my<=t.y+t.height) {\r\n          if (e.detail===2) { removeTile(i); return; }\r\n          setDragging({ idx:i, offsetX:mx-t.x, offsetY:my-t.y });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    function move(e){\r\n      if (!dragging) return;\r\n      const {mx,my} = toTile(e);\r\n      const {idx,offsetX,offsetY} = dragging;\r\n      const t = placements[idx];\r\n      let nx=mx-offsetX, ny=my-offsetY;\r\n      ({x:nx,y:ny} = applySnap(idx,nx,ny,t.width,t.height));\r\n      if (fitsInside(nx,ny,t.width,t.height)) {\r\n        const np=[...placements];\r\n        np[idx] = {...t, x:nx, y:ny};\r\n        setPlacements(np);\r\n      }\r\n    }\r\n    function up(){ if (dragging) setDragging(null); }\r\n\r\n    c.addEventListener('mousedown',down);\r\n    window.addEventListener ('mousemove',move);\r\n    window.addEventListener ('mouseup',up);\r\n    return ()=>{\r\n      c.removeEventListener('mousedown',down);\r\n      window.removeEventListener ('mousemove',move);\r\n      window.removeEventListener ('mouseup',up);\r\n    };\r\n  }, [dragging, placements, innerPoly]);\r\n\r\n  // Render\r\n  useEffect(()=>{\r\n    const c = canvasRef.current, ctx = c.getContext('2d');\r\n    c.width = zoneW * scale;\r\n    c.height= zoneH * scale;\r\n    ctx.clearRect(0,0,c.width,c.height);\r\n\r\n    // Polygon outline\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC'; ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p,i)=>{\r\n        const X=p.x*scale, Y=p.y*scale;\r\n        i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);\r\n      });\r\n      if (closed) ctx.closePath();\r\n      ctx.stroke();\r\n      ctx.fillStyle = '#0066CC';\r\n      polygonPoints.forEach(p=>{\r\n        ctx.beginPath();\r\n        ctx.arc(p.x*scale,p.y*scale,4,0,2*Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // Tiles\r\n    placements.forEach(t=>{\r\n      const x=t.x*scale, y=t.y*scale;\r\n      const w=t.width*scale, h=t.height*scale;\r\n      ctx.fillStyle='#DDD';\r\n      ctx.strokeStyle='#333';\r\n      ctx.lineWidth=1;\r\n      ctx.fillRect(x,y,w,h);\r\n      ctx.strokeRect(x,y,w,h);\r\n    });\r\n\r\n    if (!closed || placements.length===0) return;\r\n\r\n    // Red offset outline (unclipped)\r\n    let unionPoly = null;\r\n    placements.forEach(t=>{\r\n      const poly = turf.polygon([[\r\n        [t.x,t.y],\r\n        [t.x+t.width,t.y],\r\n        [t.x+t.width,t.y+t.height],\r\n        [t.x,t.y+t.height],\r\n        [t.x,t.y]\r\n      ]]);\r\n      unionPoly = unionPoly ? turf.union(unionPoly,poly) : poly;\r\n    });\r\n    unionPoly = turf.buffer(unionPoly,1e-6,{units:'meters'});\r\n    unionPoly = turf.buffer(unionPoly,-1e-6,{units:'meters'});\r\n    const redBuf = turf.buffer(unionPoly,margin,{units:'meters',steps:1});\r\n    const geom = redBuf.geometry;\r\n    const rings = geom.type==='Polygon'\r\n      ? [geom.coordinates[0]]\r\n      : geom.coordinates.map(p=>p[0]);\r\n    ctx.strokeStyle='red'; ctx.setLineDash([6,4]); ctx.lineWidth=2;\r\n    rings.forEach(ring=>{\r\n      ctx.beginPath();\r\n      ring.forEach(([px,py],i)=>{\r\n        const X=px*scale, Y=py*scale;\r\n        i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);\r\n      });\r\n      ctx.stroke();\r\n    });\r\n    ctx.setLineDash([]);\r\n\r\n    // Green inward offset\r\n    ctx.strokeStyle='green'; ctx.setLineDash([4,2]); ctx.lineWidth=2;\r\n    let area2=0;\r\n    polygonPoints.forEach((p,i)=>{\r\n      const q=polygonPoints[(i+1)%polygonPoints.length];\r\n      area2 += p.x*q.y - q.x*p.y;\r\n    });\r\n    const ccw = area2 > 0;\r\n    polygonPoints.forEach((p,i)=>{\r\n      const q=polygonPoints[(i+1)%polygonPoints.length];\r\n      const dx=q.x-p.x, dy=q.y-p.y, len=Math.hypot(dx,dy);\r\n      const nx=ccw?-dy/len:dy/len;\r\n      const ny=ccw?dx/len:-dx/len;\r\n      const px=(p.x+nx*margin)*scale;\r\n      const py=(p.y+ny*margin)*scale;\r\n      const qx=(q.x+nx*margin)*scale;\r\n      const qy=(q.y+ny*margin)*scale;\r\n      ctx.beginPath();\r\n      ctx.moveTo(px,py);\r\n      ctx.lineTo(qx,qy);\r\n      ctx.stroke();\r\n    });\r\n    ctx.setLineDash([]);\r\n\r\n  }, [zoneW, zoneH, polygonPoints, closed, placements, margin]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{\r\n        border:'1px solid #333',\r\n        cursor: dragging ? 'grabbing' : 'grab',\r\n        marginTop:20\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}