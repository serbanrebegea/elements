{"ast":null,"code":"export default function optimizeLayout(zoneW, zoneH, margin) {\n  const w = zoneW - 2 * margin;\n  const h = zoneH - 2 * margin;\n  const sizes = [4, 2, 1];\n  const placements = [];\n  const counts = {\n    4: 0,\n    2: 0,\n    1: 0\n  };\n  const gridSize = 0.01; // 1 cm step\n\n  function isFree(x, y, s) {\n    if (x + s > w || y + s > h) return false;\n    for (let p of placements) {\n      if (!(x + s <= p.x - margin || p.x - margin + p.size <= x || y + s <= p.y - margin || p.y - margin + p.size <= y)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  for (let s of sizes) {\n    for (let x = 0; x <= w - s; x += gridSize) {\n      for (let y = 0; y <= h - s; y += gridSize) {\n        if (isFree(x, y, s)) {\n          placements.push({\n            x: x + margin,\n            y: y + margin,\n            size: s\n          });\n          counts[s]++;\n        }\n      }\n    }\n  }\n  return {\n    placements,\n    counts\n  };\n}","map":{"version":3,"names":["optimizeLayout","zoneW","zoneH","margin","w","h","sizes","placements","counts","gridSize","isFree","x","y","s","p","size","push"],"sources":["C:/New folder (2)/src/utils/optimizer.js"],"sourcesContent":["export default function optimizeLayout(zoneW, zoneH, margin) {\r\n  const w = zoneW - 2 * margin;\r\n  const h = zoneH - 2 * margin;\r\n  const sizes = [4, 2, 1];\r\n  const placements = [];\r\n  const counts = {4: 0, 2: 0, 1: 0};\r\n  const gridSize = 0.01; // 1 cm step\r\n\r\n  function isFree(x, y, s) {\r\n    if (x + s > w || y + s > h) return false;\r\n    for (let p of placements) {\r\n      if (\r\n        !(x + s <= p.x - margin ||\r\n          p.x - margin + p.size <= x ||\r\n          y + s <= p.y - margin ||\r\n          p.y - margin + p.size <= y)\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  for (let s of sizes) {\r\n    for (let x = 0; x <= w - s; x += gridSize) {\r\n      for (let y = 0; y <= h - s; y += gridSize) {\r\n        if (isFree(x, y, s)) {\r\n          placements.push({ x: x + margin, y: y + margin, size: s });\r\n          counts[s]++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return { placements, counts };\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,cAAcA,CAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;EAC3D,MAAMC,CAAC,GAAGH,KAAK,GAAG,CAAC,GAAGE,MAAM;EAC5B,MAAME,CAAC,GAAGH,KAAK,GAAG,CAAC,GAAGC,MAAM;EAC5B,MAAMG,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,MAAM,GAAG;IAAC,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE;EAAC,CAAC;EACjC,MAAMC,QAAQ,GAAG,IAAI,CAAC,CAAC;;EAEvB,SAASC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACvB,IAAIF,CAAC,GAAGE,CAAC,GAAGT,CAAC,IAAIQ,CAAC,GAAGC,CAAC,GAAGR,CAAC,EAAE,OAAO,KAAK;IACxC,KAAK,IAAIS,CAAC,IAAIP,UAAU,EAAE;MACxB,IACE,EAAEI,CAAC,GAAGE,CAAC,IAAIC,CAAC,CAACH,CAAC,GAAGR,MAAM,IACrBW,CAAC,CAACH,CAAC,GAAGR,MAAM,GAAGW,CAAC,CAACC,IAAI,IAAIJ,CAAC,IAC1BC,CAAC,GAAGC,CAAC,IAAIC,CAAC,CAACF,CAAC,GAAGT,MAAM,IACrBW,CAAC,CAACF,CAAC,GAAGT,MAAM,GAAGW,CAAC,CAACC,IAAI,IAAIH,CAAC,CAAC,EAC7B;QACA,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb;EAEA,KAAK,IAAIC,CAAC,IAAIP,KAAK,EAAE;IACnB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,CAAC,GAAGS,CAAC,EAAEF,CAAC,IAAIF,QAAQ,EAAE;MACzC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,CAAC,GAAGQ,CAAC,EAAED,CAAC,IAAIH,QAAQ,EAAE;QACzC,IAAIC,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,EAAE;UACnBN,UAAU,CAACS,IAAI,CAAC;YAAEL,CAAC,EAAEA,CAAC,GAAGR,MAAM;YAAES,CAAC,EAAEA,CAAC,GAAGT,MAAM;YAAEY,IAAI,EAAEF;UAAE,CAAC,CAAC;UAC1DL,MAAM,CAACK,CAAC,CAAC,EAAE;QACb;MACF;IACF;EACF;EAEA,OAAO;IAAEN,UAAU;IAAEC;EAAO,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}