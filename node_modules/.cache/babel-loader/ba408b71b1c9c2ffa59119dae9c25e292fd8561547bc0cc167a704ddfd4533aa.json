{"ast":null,"code":"var _jsxFileName = \"c:\\\\New folder (2)\\\\src\\\\utils\\\\optimizer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  isPolygonClosed,\n  placements,\n  margin // in meters (0.207)\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const scale = 100; // px per meter\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = zoneW * scale;\n    canvas.height = zoneH * scale;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // 1) Draw room polygon\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((pt, i) => {\n        const x = pt.x * scale,\n          y = pt.y * scale;\n        i === 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      });\n      if (isPolygonClosed) ctx.closePath();\n      ctx.stroke();\n      polygonPoints.forEach(pt => {\n        ctx.fillStyle = '#CC0000';\n        ctx.beginPath();\n        ctx.arc(pt.x * scale, pt.y * scale, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    }\n\n    // 2) Draw tiles\n    placements.forEach(t => {\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(t.x * scale, t.y * scale, t.width * scale, t.height * scale);\n      ctx.strokeRect(t.x * scale, t.y * scale, t.width * scale, t.height * scale);\n    });\n\n    // 3) Draw 207 mm boundary around the **union** of tiles\n    if (placements.length) {\n      // build turf union of all tile rectangles\n      let union = null;\n      placements.forEach(t => {\n        const poly = turf.polygon([[[t.x, t.y], [t.x + t.width, t.y], [t.x + t.width, t.y + t.height], [t.x, t.y + t.height], [t.x, t.y]]]);\n        union = union ? turf.union(union, poly) : poly;\n      });\n\n      // buffer outward by margin\n      const buffered = turf.buffer(union, margin, {\n        units: 'meters'\n      });\n\n      // draw buffered shape\n      ctx.strokeStyle = '#F00';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([6, 4]);\n      const geom = buffered.geometry;\n      const drawPoly = coords => {\n        ctx.beginPath();\n        coords[0].forEach(([px, py], i) => {\n          const X = px * scale,\n            Y = py * scale;\n          i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n        });\n        ctx.closePath();\n        ctx.stroke();\n      };\n      if (geom.type === 'Polygon') {\n        drawPoly(geom.coordinates);\n      } else if (geom.type === 'MultiPolygon') {\n        geom.coordinates.forEach(polyCoords => drawPoly(polyCoords));\n      }\n      ctx.setLineDash([]);\n    }\n  }, [zoneW, zoneH, polygonPoints, isPolygonClosed, placements, margin]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #333',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","turf","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","isPolygonClosed","placements","margin","_s","canvasRef","scale","canvas","current","ctx","getContext","width","height","clearRect","length","strokeStyle","lineWidth","beginPath","forEach","pt","i","x","y","moveTo","lineTo","closePath","stroke","fillStyle","arc","Math","PI","fill","t","fillRect","strokeRect","union","poly","polygon","buffered","buffer","units","setLineDash","geom","geometry","drawPoly","coords","px","py","X","Y","type","coordinates","polyCoords","ref","style","border","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/New folder (2)/src/utils/optimizer.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW,\r\n  zoneH,\r\n  polygonPoints,\r\n  isPolygonClosed,\r\n  placements,\r\n  margin  // in meters (0.207)\r\n}) {\r\n  const canvasRef = useRef(null);\r\n  const scale = 100; // px per meter\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx    = canvas.getContext('2d');\r\n    canvas.width  = zoneW * scale;\r\n    canvas.height = zoneH * scale;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // 1) Draw room polygon\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC'; ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((pt,i) => {\r\n        const x = pt.x*scale, y = pt.y*scale;\r\n        i===0 ? ctx.moveTo(x,y) : ctx.lineTo(x,y);\r\n      });\r\n      if (isPolygonClosed) ctx.closePath();\r\n      ctx.stroke();\r\n\r\n      polygonPoints.forEach(pt => {\r\n        ctx.fillStyle = '#CC0000';\r\n        ctx.beginPath();\r\n        ctx.arc(pt.x*scale, pt.y*scale, 4, 0, 2*Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // 2) Draw tiles\r\n    placements.forEach(t => {\r\n      ctx.fillStyle   = '#DDD';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth   = 1;\r\n      ctx.fillRect(\r\n        t.x*scale, t.y*scale,\r\n        t.width*scale, t.height*scale\r\n      );\r\n      ctx.strokeRect(\r\n        t.x*scale, t.y*scale,\r\n        t.width*scale, t.height*scale\r\n      );\r\n    });\r\n\r\n    // 3) Draw 207 mm boundary around the **union** of tiles\r\n    if (placements.length) {\r\n      // build turf union of all tile rectangles\r\n      let union = null;\r\n      placements.forEach(t => {\r\n        const poly = turf.polygon([[\r\n          [t.x,              t.y],\r\n          [t.x + t.width,    t.y],\r\n          [t.x + t.width,    t.y + t.height],\r\n          [t.x,              t.y + t.height],\r\n          [t.x,              t.y]\r\n        ]]);\r\n        union = union ? turf.union(union, poly) : poly;\r\n      });\r\n\r\n      // buffer outward by margin\r\n      const buffered = turf.buffer(union, margin, { units: 'meters' });\r\n\r\n      // draw buffered shape\r\n      ctx.strokeStyle = '#F00'; ctx.lineWidth = 2;\r\n      ctx.setLineDash([6,4]);\r\n      const geom = buffered.geometry;\r\n      const drawPoly = coords => {\r\n        ctx.beginPath();\r\n        coords[0].forEach(([px,py], i) => {\r\n          const X = px*scale, Y = py*scale;\r\n          i===0 ? ctx.moveTo(X,Y) : ctx.lineTo(X,Y);\r\n        });\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n      };\r\n      if (geom.type === 'Polygon') {\r\n        drawPoly(geom.coordinates);\r\n      } else if (geom.type === 'MultiPolygon') {\r\n        geom.coordinates.forEach(polyCoords => drawPoly(polyCoords));\r\n      }\r\n      ctx.setLineDash([]);\r\n    }\r\n  }, [zoneW, zoneH, polygonPoints, isPolygonClosed, placements, margin]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid #333', marginTop: 20 }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,YAAYA,CAAC;EACnCC,KAAK;EACLC,KAAK;EACLC,aAAa;EACbC,eAAe;EACfC,UAAU;EACVC,MAAM,CAAE;AACV,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMc,KAAK,GAAG,GAAG,CAAC,CAAC;;EAEnBb,SAAS,CAAC,MAAM;IACd,MAAMc,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMC,GAAG,GAAMF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACtCH,MAAM,CAACI,KAAK,GAAIb,KAAK,GAAGQ,KAAK;IAC7BC,MAAM,CAACK,MAAM,GAAGb,KAAK,GAAGO,KAAK;IAC7BG,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEN,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;;IAEhD;IACA,IAAIZ,aAAa,CAACc,MAAM,EAAE;MACxBL,GAAG,CAACM,WAAW,GAAG,SAAS;MAAEN,GAAG,CAACO,SAAS,GAAG,CAAC;MAC9CP,GAAG,CAACQ,SAAS,CAAC,CAAC;MACfjB,aAAa,CAACkB,OAAO,CAAC,CAACC,EAAE,EAACC,CAAC,KAAK;QAC9B,MAAMC,CAAC,GAAGF,EAAE,CAACE,CAAC,GAACf,KAAK;UAAEgB,CAAC,GAAGH,EAAE,CAACG,CAAC,GAAChB,KAAK;QACpCc,CAAC,KAAG,CAAC,GAAGX,GAAG,CAACc,MAAM,CAACF,CAAC,EAACC,CAAC,CAAC,GAAGb,GAAG,CAACe,MAAM,CAACH,CAAC,EAACC,CAAC,CAAC;MAC3C,CAAC,CAAC;MACF,IAAIrB,eAAe,EAAEQ,GAAG,CAACgB,SAAS,CAAC,CAAC;MACpChB,GAAG,CAACiB,MAAM,CAAC,CAAC;MAEZ1B,aAAa,CAACkB,OAAO,CAACC,EAAE,IAAI;QAC1BV,GAAG,CAACkB,SAAS,GAAG,SAAS;QACzBlB,GAAG,CAACQ,SAAS,CAAC,CAAC;QACfR,GAAG,CAACmB,GAAG,CAACT,EAAE,CAACE,CAAC,GAACf,KAAK,EAAEa,EAAE,CAACG,CAAC,GAAChB,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAACuB,IAAI,CAACC,EAAE,CAAC;QAChDrB,GAAG,CAACsB,IAAI,CAAC,CAAC;MACZ,CAAC,CAAC;IACJ;;IAEA;IACA7B,UAAU,CAACgB,OAAO,CAACc,CAAC,IAAI;MACtBvB,GAAG,CAACkB,SAAS,GAAK,MAAM;MACxBlB,GAAG,CAACM,WAAW,GAAG,MAAM;MACxBN,GAAG,CAACO,SAAS,GAAK,CAAC;MACnBP,GAAG,CAACwB,QAAQ,CACVD,CAAC,CAACX,CAAC,GAACf,KAAK,EAAE0B,CAAC,CAACV,CAAC,GAAChB,KAAK,EACpB0B,CAAC,CAACrB,KAAK,GAACL,KAAK,EAAE0B,CAAC,CAACpB,MAAM,GAACN,KAC1B,CAAC;MACDG,GAAG,CAACyB,UAAU,CACZF,CAAC,CAACX,CAAC,GAACf,KAAK,EAAE0B,CAAC,CAACV,CAAC,GAAChB,KAAK,EACpB0B,CAAC,CAACrB,KAAK,GAACL,KAAK,EAAE0B,CAAC,CAACpB,MAAM,GAACN,KAC1B,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,IAAIJ,UAAU,CAACY,MAAM,EAAE;MACrB;MACA,IAAIqB,KAAK,GAAG,IAAI;MAChBjC,UAAU,CAACgB,OAAO,CAACc,CAAC,IAAI;QACtB,MAAMI,IAAI,GAAG1C,IAAI,CAAC2C,OAAO,CAAC,CAAC,CACzB,CAACL,CAAC,CAACX,CAAC,EAAeW,CAAC,CAACV,CAAC,CAAC,EACvB,CAACU,CAAC,CAACX,CAAC,GAAGW,CAAC,CAACrB,KAAK,EAAKqB,CAAC,CAACV,CAAC,CAAC,EACvB,CAACU,CAAC,CAACX,CAAC,GAAGW,CAAC,CAACrB,KAAK,EAAKqB,CAAC,CAACV,CAAC,GAAGU,CAAC,CAACpB,MAAM,CAAC,EAClC,CAACoB,CAAC,CAACX,CAAC,EAAeW,CAAC,CAACV,CAAC,GAAGU,CAAC,CAACpB,MAAM,CAAC,EAClC,CAACoB,CAAC,CAACX,CAAC,EAAeW,CAAC,CAACV,CAAC,CAAC,CACxB,CAAC,CAAC;QACHa,KAAK,GAAGA,KAAK,GAAGzC,IAAI,CAACyC,KAAK,CAACA,KAAK,EAAEC,IAAI,CAAC,GAAGA,IAAI;MAChD,CAAC,CAAC;;MAEF;MACA,MAAME,QAAQ,GAAG5C,IAAI,CAAC6C,MAAM,CAACJ,KAAK,EAAEhC,MAAM,EAAE;QAAEqC,KAAK,EAAE;MAAS,CAAC,CAAC;;MAEhE;MACA/B,GAAG,CAACM,WAAW,GAAG,MAAM;MAAEN,GAAG,CAACO,SAAS,GAAG,CAAC;MAC3CP,GAAG,CAACgC,WAAW,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;MACtB,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,QAAQ;MAC9B,MAAMC,QAAQ,GAAGC,MAAM,IAAI;QACzBpC,GAAG,CAACQ,SAAS,CAAC,CAAC;QACf4B,MAAM,CAAC,CAAC,CAAC,CAAC3B,OAAO,CAAC,CAAC,CAAC4B,EAAE,EAACC,EAAE,CAAC,EAAE3B,CAAC,KAAK;UAChC,MAAM4B,CAAC,GAAGF,EAAE,GAACxC,KAAK;YAAE2C,CAAC,GAAGF,EAAE,GAACzC,KAAK;UAChCc,CAAC,KAAG,CAAC,GAAGX,GAAG,CAACc,MAAM,CAACyB,CAAC,EAACC,CAAC,CAAC,GAAGxC,GAAG,CAACe,MAAM,CAACwB,CAAC,EAACC,CAAC,CAAC;QAC3C,CAAC,CAAC;QACFxC,GAAG,CAACgB,SAAS,CAAC,CAAC;QACfhB,GAAG,CAACiB,MAAM,CAAC,CAAC;MACd,CAAC;MACD,IAAIgB,IAAI,CAACQ,IAAI,KAAK,SAAS,EAAE;QAC3BN,QAAQ,CAACF,IAAI,CAACS,WAAW,CAAC;MAC5B,CAAC,MAAM,IAAIT,IAAI,CAACQ,IAAI,KAAK,cAAc,EAAE;QACvCR,IAAI,CAACS,WAAW,CAACjC,OAAO,CAACkC,UAAU,IAAIR,QAAQ,CAACQ,UAAU,CAAC,CAAC;MAC9D;MACA3C,GAAG,CAACgC,WAAW,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAAC3C,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,eAAe,EAAEC,UAAU,EAAEC,MAAM,CAAC,CAAC;EAEtE,oBACEP,OAAA;IACEyD,GAAG,EAAEhD,SAAU;IACfiD,KAAK,EAAE;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,SAAS,EAAE;IAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEN;AAACxD,EAAA,CAlGuBP,YAAY;AAAAgE,EAAA,GAAZhE,YAAY;AAAA,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}