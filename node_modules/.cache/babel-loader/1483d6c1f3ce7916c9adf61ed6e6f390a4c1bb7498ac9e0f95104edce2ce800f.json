{"ast":null,"code":"var _jsxFileName = \"c:\\\\apps\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\n// src/components/LayoutCanvas.js\n\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  closed,\n  placements,\n  setPlacements,\n  margin // in meters, e.g. 0.207\n}) {\n  _s();\n  const canvasRef = useRef();\n  const scale = 100; // px per meter\n\n  // Precompute the inward‐buffered polygon (green boundary)\n  const innerPoly = useMemo(() => {\n    if (!closed || polygonPoints.length < 3) return null;\n    const coords = polygonPoints.map(p => [p.x, p.y]);\n    coords.push(coords[0]);\n    const room = turf.polygon([coords]);\n    const shrunk = turf.buffer(room, -margin, {\n      units: 'meters'\n    });\n    return shrunk && shrunk.geometry ? shrunk : null;\n  }, [polygonPoints, closed, margin]);\n\n  // Check if tile rect lies fully inside innerPoly\n  function fitsInside(x, y, w, h) {\n    if (!innerPoly) return false;\n    const rect = turf.polygon([[[x, y], [x + w, y], [x + w, y + h], [x, y + h], [x, y]]]);\n    return turf.booleanContains(innerPoly, rect);\n  }\n\n  // Draw everything\n  useEffect(() => {\n    const c = canvasRef.current;\n    const ctx = c.getContext('2d');\n    c.width = zoneW * scale;\n    c.height = zoneH * scale;\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    // 1) Polygon outline & vertices\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((p, i) => {\n        const X = p.x * scale,\n          Y = p.y * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      if (closed) ctx.closePath();\n      ctx.stroke();\n      ctx.fillStyle = '#0066CC';\n      polygonPoints.forEach(p => {\n        ctx.beginPath();\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    }\n\n    // 2) Tiles\n    placements.forEach(t => {\n      const x = t.x * scale,\n        y = t.y * scale;\n      const w = t.width * scale,\n        h = t.height * scale;\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x, y, w, h);\n      ctx.strokeRect(x, y, w, h);\n    });\n    if (!closed || placements.length === 0) return;\n\n    // 3) Green boundary: inward buffer of polygon\n    if (innerPoly) {\n      ctx.strokeStyle = 'green';\n      ctx.setLineDash([4, 2]);\n      ctx.lineWidth = 2;\n      const geom = innerPoly.geometry;\n      const drawRing = ring => {\n        ctx.beginPath();\n        ring.forEach(([px, py], i) => {\n          const X = px * scale,\n            Y = py * scale;\n          i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n        });\n        ctx.closePath();\n        ctx.stroke();\n      };\n      if (geom.type === 'Polygon') {\n        drawRing(geom.coordinates[0]);\n      } else {\n        geom.coordinates.forEach(poly => drawRing(poly[0]));\n      }\n      ctx.setLineDash([]);\n    }\n\n    // 4) Red boundary: outward buffer of tile union, clipped inside innerPoly\n    let unionPoly = null;\n    placements.forEach(t => {\n      const poly = turf.polygon([[[t.x, t.y], [t.x + t.width, t.y], [t.x + t.width, t.y + t.height], [t.x, t.y + t.height], [t.x, t.y]]]);\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\n    });\n    let tileBuffer = turf.buffer(unionPoly, margin, {\n      units: 'meters'\n    });\n\n    // Clip so red never crosses green (innerPoly)\n    if (innerPoly) {\n      const clipPoly = turf.polygon(innerPoly.geometry.coordinates);\n      const clipped = turf.intersect(tileBuffer, clipPoly);\n      if (clipped) tileBuffer = clipped;\n    }\n    ctx.strokeStyle = 'red';\n    ctx.setLineDash([6, 4]);\n    ctx.lineWidth = 2;\n    const geom2 = tileBuffer.geometry;\n    const drawRing2 = ring => {\n      ctx.beginPath();\n      ring.forEach(([px, py], i) => {\n        const X = px * scale,\n          Y = py * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n    };\n    if (geom2.type === 'Polygon') {\n      drawRing2(geom2.coordinates[0]);\n    } else {\n      geom2.coordinates.forEach(poly => drawRing2(poly[0]));\n    }\n    ctx.setLineDash([]);\n  }, [zoneW, zoneH, polygonPoints, closed, placements, innerPoly, margin]);\n\n  // (Existing drag & snap logic remains unchanged...)\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #333',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"Q35ze2OKTWe/ZBlLDpN90prMmnE=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","turf","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","closed","placements","setPlacements","margin","_s","canvasRef","scale","innerPoly","length","coords","map","p","x","y","push","room","polygon","shrunk","buffer","units","geometry","fitsInside","w","h","rect","booleanContains","c","current","ctx","getContext","width","height","clearRect","strokeStyle","lineWidth","beginPath","forEach","i","X","Y","moveTo","lineTo","closePath","stroke","fillStyle","arc","Math","PI","fill","t","fillRect","strokeRect","setLineDash","geom","drawRing","ring","px","py","type","coordinates","poly","unionPoly","union","tileBuffer","clipPoly","clipped","intersect","geom2","drawRing2","ref","style","border","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/apps/src/components/LayoutCanvas.js"],"sourcesContent":["// src/components/LayoutCanvas.js\r\n\r\nimport React, { useRef, useEffect, useMemo } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW,\r\n  zoneH,\r\n  polygonPoints,\r\n  closed,\r\n  placements,\r\n  setPlacements,\r\n  margin  // in meters, e.g. 0.207\r\n}) {\r\n  const canvasRef = useRef();\r\n  const scale = 100; // px per meter\r\n\r\n  // Precompute the inward‐buffered polygon (green boundary)\r\n  const innerPoly = useMemo(() => {\r\n    if (!closed || polygonPoints.length < 3) return null;\r\n    const coords = polygonPoints.map(p => [p.x, p.y]);\r\n    coords.push(coords[0]);\r\n    const room = turf.polygon([coords]);\r\n    const shrunk = turf.buffer(room, -margin, { units: 'meters' });\r\n    return shrunk && shrunk.geometry ? shrunk : null;\r\n  }, [polygonPoints, closed, margin]);\r\n\r\n  // Check if tile rect lies fully inside innerPoly\r\n  function fitsInside(x, y, w, h) {\r\n    if (!innerPoly) return false;\r\n    const rect = turf.polygon([[\r\n      [x, y],\r\n      [x + w, y],\r\n      [x + w, y + h],\r\n      [x, y + h],\r\n      [x, y]\r\n    ]]);\r\n    return turf.booleanContains(innerPoly, rect);\r\n  }\r\n\r\n  // Draw everything\r\n  useEffect(() => {\r\n    const c = canvasRef.current;\r\n    const ctx = c.getContext('2d');\r\n    c.width  = zoneW * scale;\r\n    c.height = zoneH * scale;\r\n    ctx.clearRect(0, 0, c.width, c.height);\r\n\r\n    // 1) Polygon outline & vertices\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC'; ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p, i) => {\r\n        const X = p.x * scale, Y = p.y * scale;\r\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\r\n      });\r\n      if (closed) ctx.closePath();\r\n      ctx.stroke();\r\n\r\n      ctx.fillStyle = '#0066CC';\r\n      polygonPoints.forEach(p => {\r\n        ctx.beginPath();\r\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // 2) Tiles\r\n    placements.forEach(t => {\r\n      const x = t.x * scale, y = t.y * scale;\r\n      const w = t.width * scale, h = t.height * scale;\r\n      ctx.fillStyle   = '#DDD';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth   = 1;\r\n      ctx.fillRect(x, y, w, h);\r\n      ctx.strokeRect(x, y, w, h);\r\n    });\r\n\r\n    if (!closed || placements.length === 0) return;\r\n\r\n    // 3) Green boundary: inward buffer of polygon\r\n    if (innerPoly) {\r\n      ctx.strokeStyle = 'green';\r\n      ctx.setLineDash([4, 2]);\r\n      ctx.lineWidth = 2;\r\n\r\n      const geom = innerPoly.geometry;\r\n      const drawRing = ring => {\r\n        ctx.beginPath();\r\n        ring.forEach(([px, py], i) => {\r\n          const X = px * scale, Y = py * scale;\r\n          i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\r\n        });\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n      };\r\n\r\n      if (geom.type === 'Polygon') {\r\n        drawRing(geom.coordinates[0]);\r\n      } else {\r\n        geom.coordinates.forEach(poly => drawRing(poly[0]));\r\n      }\r\n\r\n      ctx.setLineDash([]);\r\n    }\r\n\r\n    // 4) Red boundary: outward buffer of tile union, clipped inside innerPoly\r\n    let unionPoly = null;\r\n    placements.forEach(t => {\r\n      const poly = turf.polygon([[\r\n        [t.x,             t.y],\r\n        [t.x + t.width,   t.y],\r\n        [t.x + t.width,   t.y + t.height],\r\n        [t.x,             t.y + t.height],\r\n        [t.x,             t.y]\r\n      ]]);\r\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\r\n    });\r\n    let tileBuffer = turf.buffer(unionPoly, margin, { units: 'meters' });\r\n\r\n    // Clip so red never crosses green (innerPoly)\r\n    if (innerPoly) {\r\n      const clipPoly = turf.polygon(innerPoly.geometry.coordinates);\r\n      const clipped = turf.intersect(tileBuffer, clipPoly);\r\n      if (clipped) tileBuffer = clipped;\r\n    }\r\n\r\n    ctx.strokeStyle = 'red';\r\n    ctx.setLineDash([6, 4]);\r\n    ctx.lineWidth = 2;\r\n\r\n    const geom2 = tileBuffer.geometry;\r\n    const drawRing2 = ring => {\r\n      ctx.beginPath();\r\n      ring.forEach(([px, py], i) => {\r\n        const X = px * scale, Y = py * scale;\r\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\r\n      });\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n    };\r\n\r\n    if (geom2.type === 'Polygon') {\r\n      drawRing2(geom2.coordinates[0]);\r\n    } else {\r\n      geom2.coordinates.forEach(poly => drawRing2(poly[0]));\r\n    }\r\n\r\n    ctx.setLineDash([]);\r\n  }, [zoneW, zoneH, polygonPoints, closed, placements, innerPoly, margin]);\r\n\r\n  // (Existing drag & snap logic remains unchanged...)\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid #333', marginTop: 20 }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}