{"ast":null,"code":"var _jsxFileName = \"c:\\\\apps\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as turf from '@turf/turf';\nimport LayoutCanvas from './components/LayoutCanvas';\nimport optimizeLayout from './utils/optimizer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Canvas dimensions\n  const [zoneW, setZoneW] = useState(10);\n  const [zoneH, setZoneH] = useState(6);\n\n  // Polygon definition (by sides)\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const [closed, setClosed] = useState(false);\n  const [sideLen, setSideLen] = useState('');\n  const [sideAng, setSideAng] = useState('');\n\n  // Layout options\n  const tileLengths = [4, 2, 1];\n  const [orientation, setOrientation] = useState('both');\n  const [tileW, setTileW] = useState(1.26);\n  const [margin, setMargin] = useState(0.207);\n\n  // Pricing per tile length\n  const [prices, setPrices] = useState({\n    4: 20,\n    2: 12,\n    1: 6\n  });\n\n  // Tile placements\n  const [placements, setPlacements] = useState([]);\n\n  // Manual add/delete\n  const [newTileLen, setNewTileLen] = useState(4);\n\n  // Boundary & cost\n  const [pricePerMeter, setPricePerMeter] = useState(0);\n  const [boundaryPerimeter, setBoundaryPerimeter] = useState(0);\n  const [boundaryCost, setBoundaryCost] = useState(0);\n\n  // 1) Build polygon by adding sides\n  const addSide = () => {\n    const L = parseFloat(sideLen),\n      A = parseFloat(sideAng) * Math.PI / 180;\n    if (!L || isNaN(A)) return;\n    const last = polygonPoints.length ? polygonPoints[polygonPoints.length - 1] : {\n      x: 0,\n      y: 0\n    };\n    setPolygonPoints([...polygonPoints, {\n      x: last.x + L * Math.cos(A),\n      y: last.y + L * Math.sin(A)\n    }]);\n    setSideLen('');\n    setSideAng('');\n  };\n  const finishPoly = () => {\n    if (polygonPoints.length >= 3) setClosed(true);\n  };\n  const resetAll = () => {\n    setPolygonPoints([]);\n    setClosed(false);\n    setPlacements([]);\n    setBoundaryPerimeter(0);\n    setBoundaryCost(0);\n  };\n\n  // 2) Optimize automatic layout\n  const optimize = () => {\n    const {\n      placements: pl\n    } = optimizeLayout(polygonPoints, tileLengths, tileW, margin, orientation);\n    setPlacements(pl);\n    setBoundaryPerimeter(0);\n    setBoundaryCost(0);\n  };\n\n  // 3) Manually add one tile in top‑left of inner polygon\n  const addTile = () => {\n    if (!closed) return;\n    const room = turf.polygon([[...polygonPoints.map(p => [p.x, p.y]), [polygonPoints[0].x, polygonPoints[0].y]]]);\n    const inner = turf.buffer(room, -margin, {\n      units: 'meters'\n    });\n    const [minX, minY] = turf.bbox(inner);\n    setPlacements(ps => [...ps, {\n      x: minX,\n      y: minY,\n      width: newTileLen,\n      height: tileW,\n      length: newTileLen\n    }]);\n  };\n  const removeTile = idx => {\n    setPlacements(ps => ps.filter((_, i) => i !== idx));\n  };\n\n  // 4) Calculate offset perimeter (Euclidean)\n  const calculateBoundary = () => {\n    if (placements.length === 0) {\n      setBoundaryPerimeter(0);\n      setBoundaryCost(0);\n      return;\n    }\n    // union all tile rects\n    let unionPoly = null;\n    placements.forEach(t => {\n      const poly = turf.polygon([[[t.x, t.y], [t.x + t.width, t.y], [t.x + t.width, t.y + t.height], [t.x, t.y + t.height], [t.x, t.y]]]);\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\n    });\n    // micro‑buffer to fuse tiny gaps\n    unionPoly = turf.buffer(unionPoly, 1e-6, {\n      units: 'meters'\n    });\n    unionPoly = turf.buffer(unionPoly, -1e-6, {\n      units: 'meters'\n    });\n    // buffer outward by margin (square corners)\n    const buf = turf.buffer(unionPoly, margin, {\n      units: 'meters',\n      steps: 1\n    });\n    // sum Euclidean lengths of outer ring(s)\n    const geom = buf.geometry;\n    const rings = geom.type === 'Polygon' ? [geom.coordinates[0]] : geom.coordinates.map(poly => poly[0]);\n    let peri = 0;\n    rings.forEach(ring => {\n      for (let i = 0; i < ring.length - 1; i++) {\n        const [x1, y1] = ring[i];\n        const [x2, y2] = ring[i + 1];\n        peri += Math.hypot(x2 - x1, y2 - y1);\n      }\n    });\n    setBoundaryPerimeter(peri);\n    setBoundaryCost(peri * pricePerMeter);\n  };\n\n  // dynamic tile counts\n  const tileCounts = placements.reduce((acc, t) => {\n    acc[t.length] = (acc[t.length] || 0) + 1;\n    return acc;\n  }, {\n    4: 0,\n    2: 0,\n    1: 0\n  });\n\n  // total tile cost\n  const tileCost = Object.entries(tileCounts).reduce((sum, [len, count]) => sum + count * (prices[len] || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tile Layout Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Canvas W (m):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: zoneW,\n          onChange: e => setZoneW(+e.target.value || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Canvas H (m):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: zoneH,\n          onChange: e => setZoneH(+e.target.value || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetAll,\n        children: \"Reset All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Side length (m):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: sideLen,\n          onChange: e => setSideLen(e.target.value),\n          disabled: closed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Angle (\\xB0):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"1\",\n          value: sideAng,\n          onChange: e => setSideAng(e.target.value),\n          disabled: closed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSide,\n        disabled: closed,\n        children: \"Add Side\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishPoly,\n        disabled: closed || polygonPoints.length < 3,\n        children: \"Close Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Orientation:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: orientation,\n          onChange: e => setOrientation(e.target.value),\n          disabled: !closed,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"both\",\n            children: \"Both\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"horizontal\",\n            children: \"Horizontal only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vertical\",\n            children: \"Vertical only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tile short side (m):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: tileW,\n          onChange: e => setTileW(+e.target.value || 0),\n          disabled: !closed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Offset (m):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.001\",\n          value: margin,\n          onChange: e => setMargin(+e.target.value || 0),\n          disabled: !closed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: optimize,\n        disabled: !closed,\n        children: \"Optimize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), closed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New tile length:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTileLen,\n          onChange: e => setNewTileLen(+e.target.value),\n          children: tileLengths.map(L => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: L,\n            children: [L, \"\\xA0m\"]\n          }, L, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTile,\n        children: \"Add Tile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: 12\n        },\n        children: \"(double\\u2011click to delete)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), placements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"4\\xA0m: \", tileCounts[4], \"\\u2003 2\\xA0m: \", tileCounts[2], \"\\u2003 1\\xA0m: \", tileCounts[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tile cost: \", tileCost.toFixed(2), \"\\xA0lei\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), placements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price per meter:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: pricePerMeter,\n          onChange: e => setPricePerMeter(+e.target.value || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateBoundary,\n        children: \"Calculate Offset Perimeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Offset perimeter: \", boundaryPerimeter.toFixed(2), \"\\xA0m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Perimeter cost: \", boundaryCost.toFixed(2), \"\\xA0lei\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LayoutCanvas, {\n      zoneW: zoneW,\n      zoneH: zoneH,\n      polygonPoints: polygonPoints,\n      closed: closed,\n      placements: placements,\n      setPlacements: setPlacements,\n      removeTile: removeTile,\n      margin: margin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D1EmoHMQWHqk9Tpl2ztmWNDAOtg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","turf","LayoutCanvas","optimizeLayout","jsxDEV","_jsxDEV","App","_s","zoneW","setZoneW","zoneH","setZoneH","polygonPoints","setPolygonPoints","closed","setClosed","sideLen","setSideLen","sideAng","setSideAng","tileLengths","orientation","setOrientation","tileW","setTileW","margin","setMargin","prices","setPrices","placements","setPlacements","newTileLen","setNewTileLen","pricePerMeter","setPricePerMeter","boundaryPerimeter","setBoundaryPerimeter","boundaryCost","setBoundaryCost","addSide","L","parseFloat","A","Math","PI","isNaN","last","length","x","y","cos","sin","finishPoly","resetAll","optimize","pl","addTile","room","polygon","map","p","inner","buffer","units","minX","minY","bbox","ps","width","height","removeTile","idx","filter","_","i","calculateBoundary","unionPoly","forEach","t","poly","union","buf","steps","geom","geometry","rings","type","coordinates","peri","ring","x1","y1","x2","y2","hypot","tileCounts","reduce","acc","tileCost","Object","entries","sum","len","count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","step","disabled","style","marginLeft","toFixed","_c","$RefreshReg$"],"sources":["c:/apps/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as turf from '@turf/turf';\r\nimport LayoutCanvas from './components/LayoutCanvas';\r\nimport optimizeLayout from './utils/optimizer';\r\nimport './index.css';\r\n\r\nexport default function App() {\r\n  // Canvas dimensions\r\n  const [zoneW, setZoneW] = useState(10);\r\n  const [zoneH, setZoneH] = useState(6);\r\n\r\n  // Polygon definition (by sides)\r\n  const [polygonPoints, setPolygonPoints] = useState([]);\r\n  const [closed, setClosed]               = useState(false);\r\n  const [sideLen, setSideLen]             = useState('');\r\n  const [sideAng, setSideAng]             = useState('');\r\n\r\n  // Layout options\r\n  const tileLengths   = [4, 2, 1];\r\n  const [orientation, setOrientation] = useState('both');\r\n  const [tileW, setTileW]             = useState(1.26);\r\n  const [margin, setMargin]           = useState(0.207);\r\n\r\n  // Pricing per tile length\r\n  const [prices, setPrices] = useState({4:20,2:12,1:6});\r\n\r\n  // Tile placements\r\n  const [placements, setPlacements] = useState([]);\r\n\r\n  // Manual add/delete\r\n  const [newTileLen, setNewTileLen] = useState(4);\r\n\r\n  // Boundary & cost\r\n  const [pricePerMeter, setPricePerMeter]       = useState(0);\r\n  const [boundaryPerimeter, setBoundaryPerimeter] = useState(0);\r\n  const [boundaryCost, setBoundaryCost]         = useState(0);\r\n\r\n  // 1) Build polygon by adding sides\r\n  const addSide = () => {\r\n    const L = parseFloat(sideLen),\r\n          A = parseFloat(sideAng) * Math.PI/180;\r\n    if (!L || isNaN(A)) return;\r\n    const last = polygonPoints.length\r\n      ? polygonPoints[polygonPoints.length-1]\r\n      : {x:0,y:0};\r\n    setPolygonPoints([\r\n      ...polygonPoints,\r\n      { x: last.x + L*Math.cos(A), y: last.y + L*Math.sin(A) }\r\n    ]);\r\n    setSideLen(''); setSideAng('');\r\n  };\r\n  const finishPoly = () => {\r\n    if (polygonPoints.length >= 3) setClosed(true);\r\n  };\r\n  const resetAll = () => {\r\n    setPolygonPoints([]); setClosed(false);\r\n    setPlacements([]);\r\n    setBoundaryPerimeter(0); setBoundaryCost(0);\r\n  };\r\n\r\n  // 2) Optimize automatic layout\r\n  const optimize = () => {\r\n    const { placements: pl } = optimizeLayout(\r\n      polygonPoints, tileLengths, tileW, margin, orientation\r\n    );\r\n    setPlacements(pl);\r\n    setBoundaryPerimeter(0);\r\n    setBoundaryCost(0);\r\n  };\r\n\r\n  // 3) Manually add one tile in top‑left of inner polygon\r\n  const addTile = () => {\r\n    if (!closed) return;\r\n    const room  = turf.polygon([[\r\n      ...polygonPoints.map(p=>[p.x,p.y]),\r\n      [polygonPoints[0].x, polygonPoints[0].y]\r\n    ]]);\r\n    const inner = turf.buffer(room, -margin, { units:'meters' });\r\n    const [minX,minY] = turf.bbox(inner);\r\n    setPlacements(ps=>[\r\n      ...ps,\r\n      { x: minX, y: minY,\r\n        width: newTileLen, height: tileW,\r\n        length: newTileLen }\r\n    ]);\r\n  };\r\n  const removeTile = idx => {\r\n    setPlacements(ps=>ps.filter((_,i)=>i!==idx));\r\n  };\r\n\r\n  // 4) Calculate offset perimeter (Euclidean)\r\n  const calculateBoundary = () => {\r\n    if (placements.length === 0) {\r\n      setBoundaryPerimeter(0);\r\n      setBoundaryCost(0);\r\n      return;\r\n    }\r\n    // union all tile rects\r\n    let unionPoly = null;\r\n    placements.forEach(t => {\r\n      const poly = turf.polygon([[\r\n        [t.x,            t.y],\r\n        [t.x + t.width,  t.y],\r\n        [t.x + t.width,  t.y + t.height],\r\n        [t.x,            t.y + t.height],\r\n        [t.x,            t.y]\r\n      ]]);\r\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\r\n    });\r\n    // micro‑buffer to fuse tiny gaps\r\n    unionPoly = turf.buffer(unionPoly, 1e-6,  { units:'meters' });\r\n    unionPoly = turf.buffer(unionPoly,-1e-6,  { units:'meters' });\r\n    // buffer outward by margin (square corners)\r\n    const buf = turf.buffer(unionPoly, margin, {\r\n      units:'meters',\r\n      steps:1\r\n    });\r\n    // sum Euclidean lengths of outer ring(s)\r\n    const geom = buf.geometry;\r\n    const rings = geom.type === 'Polygon'\r\n      ? [geom.coordinates[0]]\r\n      : geom.coordinates.map(poly => poly[0]);\r\n    let peri = 0;\r\n    rings.forEach(ring => {\r\n      for (let i = 0; i < ring.length - 1; i++) {\r\n        const [x1,y1] = ring[i];\r\n        const [x2,y2] = ring[i+1];\r\n        peri += Math.hypot(x2 - x1, y2 - y1);\r\n      }\r\n    });\r\n    setBoundaryPerimeter(peri);\r\n    setBoundaryCost(peri * pricePerMeter);\r\n  };\r\n\r\n  // dynamic tile counts\r\n  const tileCounts = placements.reduce((acc,t) => {\r\n    acc[t.length] = (acc[t.length]||0) + 1;\r\n    return acc;\r\n  }, {4:0,2:0,1:0});\r\n\r\n  // total tile cost\r\n  const tileCost = Object.entries(tileCounts)\r\n    .reduce((sum,[len,count])=>\r\n      sum + count * (prices[len]||0), 0\r\n    );\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Tile Layout Optimizer</h1>\r\n\r\n      {/* Canvas & polygon controls */}\r\n      <div className=\"controls\">\r\n        <label>\r\n          Canvas W (m):\r\n          <input type=\"number\" value={zoneW}\r\n                 onChange={e=>setZoneW(+e.target.value||0)} />\r\n        </label>\r\n        <label>\r\n          Canvas H (m):\r\n          <input type=\"number\" value={zoneH}\r\n                 onChange={e=>setZoneH(+e.target.value||0)} />\r\n        </label>\r\n        <button onClick={resetAll}>Reset All</button>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <label>\r\n          Side length (m):\r\n          <input type=\"number\" step=\"0.01\" value={sideLen}\r\n                 onChange={e=>setSideLen(e.target.value)}\r\n                 disabled={closed}/>\r\n        </label>\r\n        <label>\r\n          Angle (°):\r\n          <input type=\"number\" step=\"1\" value={sideAng}\r\n                 onChange={e=>setSideAng(e.target.value)}\r\n                 disabled={closed}/>\r\n        </label>\r\n        <button onClick={addSide} disabled={closed}>Add Side</button>\r\n        <button onClick={finishPoly}\r\n                disabled={closed||polygonPoints.length<3}>\r\n          Close Polygon\r\n        </button>\r\n      </div>\r\n\r\n      {/* Layout options */}\r\n      <div className=\"controls\">\r\n        <label>\r\n          Orientation:\r\n          <select value={orientation}\r\n                  onChange={e=>setOrientation(e.target.value)}\r\n                  disabled={!closed}>\r\n            <option value=\"both\">Both</option>\r\n            <option value=\"horizontal\">Horizontal only</option>\r\n            <option value=\"vertical\">Vertical only</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Tile short side (m):\r\n          <input type=\"number\" step=\"0.01\" value={tileW}\r\n                 onChange={e=>setTileW(+e.target.value||0)}\r\n                 disabled={!closed}/>\r\n        </label>\r\n        <label>\r\n          Offset (m):\r\n          <input type=\"number\" step=\"0.001\" value={margin}\r\n                 onChange={e=>setMargin(+e.target.value||0)}\r\n                 disabled={!closed}/>\r\n        </label>\r\n        <button onClick={optimize} disabled={!closed}>Optimize</button>\r\n      </div>\r\n\r\n      {/* Manual add/delete */}\r\n      {closed && (\r\n        <div className=\"controls\">\r\n          <label>\r\n            New tile length:\r\n            <select value={newTileLen}\r\n                    onChange={e=>setNewTileLen(+e.target.value)}>\r\n              {tileLengths.map(L=>(\r\n                <option key={L} value={L}>{L} m</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button onClick={addTile}>Add Tile</button>\r\n          <span style={{marginLeft:12}}>(double‑click to delete)</span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tile counts & cost */}\r\n      {placements.length>0 && (\r\n        <div className=\"controls\">\r\n          <p>\r\n            4 m: {tileCounts[4]} \r\n            2 m: {tileCounts[2]} \r\n            1 m: {tileCounts[1]}\r\n          </p>\r\n          <p>Tile cost: {tileCost.toFixed(2)} lei</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Boundary & price */}\r\n      {placements.length>0 && (\r\n        <div className=\"controls\">\r\n          <label>\r\n            Price per meter:\r\n            <input type=\"number\" step=\"0.01\"\r\n                   value={pricePerMeter}\r\n                   onChange={e=>setPricePerMeter(+e.target.value||0)} />\r\n          </label>\r\n          <button onClick={calculateBoundary}>\r\n            Calculate Offset Perimeter\r\n          </button>\r\n          <p>Offset perimeter: {boundaryPerimeter.toFixed(2)} m</p>\r\n          <p>Perimeter cost: {boundaryCost.toFixed(2)} lei</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Canvas */}\r\n      <LayoutCanvas\r\n        zoneW={zoneW}\r\n        zoneH={zoneH}\r\n        polygonPoints={polygonPoints}\r\n        closed={closed}\r\n        placements={placements}\r\n        setPlacements={setPlacements}\r\n        removeTile={removeTile}\r\n        margin={margin}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}