{"ast":null,"code":"var _jsxFileName = \"c:\\\\apps\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\n// src/components/LayoutCanvas.js\n\nimport React, { useRef, useEffect, useMemo, useState } from 'react';\nimport * as turf from '@turf/turf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  closed,\n  placements,\n  setPlacements,\n  margin // in meters, e.g. 0.207\n}) {\n  _s();\n  const canvasRef = useRef();\n  const [dragging, setDragging] = useState(null);\n  const scale = 100; // px per meter\n  const snapTol = 0.05; // meters\n\n  // Build the inward‐buffered polygon (used for containment tests, not drawing)\n  const innerPoly = useMemo(() => {\n    if (!closed || polygonPoints.length < 3) return null;\n    const coords = polygonPoints.map(p => [p.x, p.y]);\n    coords.push(coords[0]);\n    const room = turf.polygon([coords]);\n    return turf.buffer(room, -margin, {\n      units: 'meters',\n      steps: 64\n    });\n  }, [polygonPoints, closed, margin]);\n\n  // Check if a tile fits fully inside innerPoly\n  function fitsInside(x, y, w, h) {\n    if (!innerPoly) return false;\n    const rect = turf.polygon([[[x, y], [x + w, y], [x + w, y + h], [x, y + h], [x, y]]]);\n    return turf.booleanContains(innerPoly, rect);\n  }\n\n  // Snap to other tile edges\n  function applySnap(idx, x, y, w, h) {\n    placements.forEach((t, j) => {\n      if (j === idx) return;\n      [[t.x], [t.x + t.width]].forEach(([sx]) => {\n        if (Math.abs(x - sx) < snapTol) x = sx;\n        if (Math.abs(x + w - sx) < snapTol) x = sx - w;\n      });\n      [[t.y], [t.y + t.height]].forEach(([sy]) => {\n        if (Math.abs(y - sy) < snapTol) y = sy;\n        if (Math.abs(y + h - sy) < snapTol) y = sy - h;\n      });\n    });\n    return {\n      x,\n      y\n    };\n  }\n\n  // Drag logic\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    function toTile(e) {\n      const r = canvas.getBoundingClientRect();\n      return {\n        mx: (e.clientX - r.left) / scale,\n        my: (e.clientY - r.top) / scale\n      };\n    }\n    function down(e) {\n      const {\n        mx,\n        my\n      } = toTile(e);\n      for (let i = placements.length - 1; i >= 0; i--) {\n        const t = placements[i];\n        if (mx >= t.x && mx <= t.x + t.width && my >= t.y && my <= t.y + t.height) {\n          setDragging({\n            idx: i,\n            offsetX: mx - t.x,\n            offsetY: my - t.y\n          });\n          return;\n        }\n      }\n    }\n    function move(e) {\n      if (!dragging) return;\n      const {\n        mx,\n        my\n      } = toTile(e);\n      const {\n        idx,\n        offsetX,\n        offsetY\n      } = dragging;\n      const t = placements[idx];\n      let nx = mx - offsetX,\n        ny = my - offsetY;\n      ({\n        x: nx,\n        y: ny\n      } = applySnap(idx, nx, ny, t.width, t.height));\n      if (fitsInside(nx, ny, t.width, t.height)) {\n        const np = [...placements];\n        np[idx] = {\n          ...t,\n          x: nx,\n          y: ny\n        };\n        setPlacements(np);\n      }\n    }\n    function up() {\n      if (dragging) setDragging(null);\n    }\n    canvas.addEventListener('mousedown', down);\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', up);\n    return () => {\n      canvas.removeEventListener('mousedown', down);\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', up);\n    };\n  }, [dragging, placements, innerPoly]);\n\n  // Draw everything\n  useEffect(() => {\n    const c = canvasRef.current,\n      ctx = c.getContext('2d');\n    c.width = zoneW * scale;\n    c.height = zoneH * scale;\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    // 1) Polygon outline + vertices\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((p, i) => {\n        const X = p.x * scale,\n          Y = p.y * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      if (closed) ctx.closePath();\n      ctx.stroke();\n      ctx.fillStyle = '#0066CC';\n      polygonPoints.forEach(p => {\n        ctx.beginPath();\n        ctx.arc(p.x * scale, p.y * scale, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    }\n\n    // 2) Tiles\n    placements.forEach(t => {\n      const x = t.x * scale,\n        y = t.y * scale;\n      const w = t.width * scale,\n        h = t.height * scale;\n      ctx.fillStyle = '#DDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(x, y, w, h);\n      ctx.strokeRect(x, y, w, h);\n    });\n    if (!closed || placements.length === 0) return;\n\n    // 3) Red boundary: outward tile buffer\n    let unionPoly = null;\n    placements.forEach(t => {\n      const poly = turf.polygon([[[t.x, t.y], [t.x + t.width, t.y], [t.x + t.width, t.y + t.height], [t.x, t.y + t.height], [t.x, t.y]]]);\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\n    });\n    const redBuf = turf.buffer(unionPoly, margin, {\n      units: 'meters',\n      steps: 64\n    });\n    ctx.strokeStyle = 'red';\n    ctx.setLineDash([6, 4]);\n    ctx.lineWidth = 2;\n    const rgeom = redBuf.geometry;\n    const drawRing = ring => {\n      ctx.beginPath();\n      ring.forEach(([px, py], i) => {\n        const X = px * scale,\n          Y = py * scale;\n        i === 0 ? ctx.moveTo(X, Y) : ctx.lineTo(X, Y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n    };\n    if (rgeom.type === 'Polygon') {\n      drawRing(rgeom.coordinates[0]);\n    } else {\n      rgeom.coordinates.forEach(poly => drawRing(poly[0]));\n    }\n    ctx.setLineDash([]);\n\n    // 4) Green boundary: manual inward offset, drawn last to cover red outside\n    ctx.strokeStyle = 'green';\n    ctx.setLineDash([4, 2]);\n    ctx.lineWidth = 2;\n    // determine winding (CCW)\n    let area2 = 0;\n    polygonPoints.forEach((p, i) => {\n      const q = polygonPoints[(i + 1) % polygonPoints.length];\n      area2 += p.x * q.y - q.x * p.y;\n    });\n    const ccw = area2 > 0;\n    polygonPoints.forEach((p, i) => {\n      const q = polygonPoints[(i + 1) % polygonPoints.length];\n      const dx = q.x - p.x,\n        dy = q.y - p.y;\n      const len = Math.hypot(dx, dy);\n      const nx = ccw ? -dy / len : dy / len;\n      const ny = ccw ? dx / len : -dx / len;\n      const px = (p.x + nx * margin) * scale;\n      const py = (p.y + ny * margin) * scale;\n      const qx = (q.x + nx * margin) * scale;\n      const qy = (q.y + ny * margin) * scale;\n      ctx.beginPath();\n      ctx.moveTo(px, py);\n      ctx.lineTo(qx, qy);\n      ctx.stroke();\n    });\n    ctx.setLineDash([]);\n  }, [zoneW, zoneH, polygonPoints, closed, placements, margin]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid #333',\n      cursor: dragging ? 'grabbing' : 'grab',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"kiaGtzYXKhKNH9EKMth3WvM/eXA=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","useState","turf","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","closed","placements","setPlacements","margin","_s","canvasRef","dragging","setDragging","scale","snapTol","innerPoly","length","coords","map","p","x","y","push","room","polygon","buffer","units","steps","fitsInside","w","h","rect","booleanContains","applySnap","idx","forEach","t","j","width","sx","Math","abs","height","sy","canvas","current","toTile","e","r","getBoundingClientRect","mx","clientX","left","my","clientY","top","down","i","offsetX","offsetY","move","nx","ny","np","up","addEventListener","window","removeEventListener","c","ctx","getContext","clearRect","strokeStyle","lineWidth","beginPath","X","Y","moveTo","lineTo","closePath","stroke","fillStyle","arc","PI","fill","fillRect","strokeRect","unionPoly","poly","union","redBuf","setLineDash","rgeom","geometry","drawRing","ring","px","py","type","coordinates","area2","q","ccw","dx","dy","len","hypot","qx","qy","ref","style","border","cursor","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/apps/src/components/LayoutCanvas.js"],"sourcesContent":["// src/components/LayoutCanvas.js\r\n\r\nimport React, { useRef, useEffect, useMemo, useState } from 'react';\r\nimport * as turf from '@turf/turf';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW,\r\n  zoneH,\r\n  polygonPoints,\r\n  closed,\r\n  placements,\r\n  setPlacements,\r\n  margin  // in meters, e.g. 0.207\r\n}) {\r\n  const canvasRef = useRef();\r\n  const [dragging, setDragging] = useState(null);\r\n  const scale = 100;    // px per meter\r\n  const snapTol = 0.05; // meters\r\n\r\n  // Build the inward‐buffered polygon (used for containment tests, not drawing)\r\n  const innerPoly = useMemo(() => {\r\n    if (!closed || polygonPoints.length < 3) return null;\r\n    const coords = polygonPoints.map(p => [p.x, p.y]);\r\n    coords.push(coords[0]);\r\n    const room = turf.polygon([coords]);\r\n    return turf.buffer(room, -margin, { units: 'meters', steps: 64 });\r\n  }, [polygonPoints, closed, margin]);\r\n\r\n  // Check if a tile fits fully inside innerPoly\r\n  function fitsInside(x, y, w, h) {\r\n    if (!innerPoly) return false;\r\n    const rect = turf.polygon([[\r\n      [x, y],\r\n      [x + w, y],\r\n      [x + w, y + h],\r\n      [x, y + h],\r\n      [x, y]\r\n    ]]);\r\n    return turf.booleanContains(innerPoly, rect);\r\n  }\r\n\r\n  // Snap to other tile edges\r\n  function applySnap(idx, x, y, w, h) {\r\n    placements.forEach((t, j) => {\r\n      if (j === idx) return;\r\n      [[t.x], [t.x + t.width]].forEach(([sx]) => {\r\n        if (Math.abs(x - sx) < snapTol) x = sx;\r\n        if (Math.abs(x + w - sx) < snapTol) x = sx - w;\r\n      });\r\n      [[t.y], [t.y + t.height]].forEach(([sy]) => {\r\n        if (Math.abs(y - sy) < snapTol) y = sy;\r\n        if (Math.abs(y + h - sy) < snapTol) y = sy - h;\r\n      });\r\n    });\r\n    return { x, y };\r\n  }\r\n\r\n  // Drag logic\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    function toTile(e) {\r\n      const r = canvas.getBoundingClientRect();\r\n      return {\r\n        mx: (e.clientX - r.left) / scale,\r\n        my: (e.clientY - r.top)  / scale\r\n      };\r\n    }\r\n    function down(e) {\r\n      const { mx, my } = toTile(e);\r\n      for (let i = placements.length - 1; i >= 0; i--) {\r\n        const t = placements[i];\r\n        if (mx >= t.x && mx <= t.x + t.width &&\r\n            my >= t.y && my <= t.y + t.height) {\r\n          setDragging({ idx: i, offsetX: mx - t.x, offsetY: my - t.y });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    function move(e) {\r\n      if (!dragging) return;\r\n      const { mx, my } = toTile(e);\r\n      const { idx, offsetX, offsetY } = dragging;\r\n      const t = placements[idx];\r\n      let nx = mx - offsetX, ny = my - offsetY;\r\n      ({ x: nx, y: ny } = applySnap(idx, nx, ny, t.width, t.height));\r\n      if (fitsInside(nx, ny, t.width, t.height)) {\r\n        const np = [...placements];\r\n        np[idx] = { ...t, x: nx, y: ny };\r\n        setPlacements(np);\r\n      }\r\n    }\r\n    function up() {\r\n      if (dragging) setDragging(null);\r\n    }\r\n    canvas.addEventListener('mousedown', down);\r\n    window.addEventListener('mousemove', move);\r\n    window.addEventListener('mouseup', up);\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', down);\r\n      window.removeEventListener('mousemove', move);\r\n      window.removeEventListener('mouseup', up);\r\n    };\r\n  }, [dragging, placements, innerPoly]);\r\n\r\n  // Draw everything\r\n  useEffect(() => {\r\n    const c = canvasRef.current, ctx = c.getContext('2d');\r\n    c.width  = zoneW * scale;\r\n    c.height = zoneH * scale;\r\n    ctx.clearRect(0, 0, c.width, c.height);\r\n\r\n    // 1) Polygon outline + vertices\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC'; ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((p, i) => {\r\n        const X = p.x*scale, Y = p.y*scale;\r\n        i===0 ? ctx.moveTo(X,Y) : ctx.lineTo(X,Y);\r\n      });\r\n      if (closed) ctx.closePath();\r\n      ctx.stroke();\r\n      ctx.fillStyle = '#0066CC';\r\n      polygonPoints.forEach(p=>{\r\n        ctx.beginPath();\r\n        ctx.arc(p.x*scale, p.y*scale, 4, 0, 2*Math.PI);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // 2) Tiles\r\n    placements.forEach(t=>{\r\n      const x=t.x*scale, y=t.y*scale;\r\n      const w=t.width*scale, h=t.height*scale;\r\n      ctx.fillStyle   = '#DDD';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth   = 1;\r\n      ctx.fillRect(x,y,w,h);\r\n      ctx.strokeRect(x,y,w,h);\r\n    });\r\n\r\n    if (!closed || placements.length===0) return;\r\n\r\n    // 3) Red boundary: outward tile buffer\r\n    let unionPoly = null;\r\n    placements.forEach(t => {\r\n      const poly = turf.polygon([[\r\n        [t.x, t.y],\r\n        [t.x+t.width, t.y],\r\n        [t.x+t.width, t.y+t.height],\r\n        [t.x, t.y+t.height],\r\n        [t.x, t.y]\r\n      ]]);\r\n      unionPoly = unionPoly ? turf.union(unionPoly, poly) : poly;\r\n    });\r\n    const redBuf = turf.buffer(unionPoly, margin, {\r\n      units: 'meters',\r\n      steps: 64\r\n    });\r\n    ctx.strokeStyle = 'red';\r\n    ctx.setLineDash([6,4]);\r\n    ctx.lineWidth = 2;\r\n    const rgeom = redBuf.geometry;\r\n    const drawRing = ring => {\r\n      ctx.beginPath();\r\n      ring.forEach(([px,py], i) => {\r\n        const X=px*scale, Y=py*scale;\r\n        i===0?ctx.moveTo(X,Y):ctx.lineTo(X,Y);\r\n      });\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n    };\r\n    if (rgeom.type==='Polygon') {\r\n      drawRing(rgeom.coordinates[0]);\r\n    } else {\r\n      rgeom.coordinates.forEach(poly=>drawRing(poly[0]));\r\n    }\r\n    ctx.setLineDash([]);\r\n\r\n    // 4) Green boundary: manual inward offset, drawn last to cover red outside\r\n    ctx.strokeStyle = 'green';\r\n    ctx.setLineDash([4,2]);\r\n    ctx.lineWidth = 2;\r\n    // determine winding (CCW)\r\n    let area2=0;\r\n    polygonPoints.forEach((p,i)=>{\r\n      const q=polygonPoints[(i+1)%polygonPoints.length];\r\n      area2 += p.x*q.y - q.x*p.y;\r\n    });\r\n    const ccw = area2>0;\r\n    polygonPoints.forEach((p,i)=>{\r\n      const q=polygonPoints[(i+1)%polygonPoints.length];\r\n      const dx=q.x-p.x, dy=q.y-p.y;\r\n      const len=Math.hypot(dx,dy);\r\n      const nx = ccw?-dy/len: dy/len;\r\n      const ny = ccw? dx/len:-dx/len;\r\n      const px=(p.x+nx*margin)*scale;\r\n      const py=(p.y+ny*margin)*scale;\r\n      const qx=(q.x+nx*margin)*scale;\r\n      const qy=(q.y+ny*margin)*scale;\r\n      ctx.beginPath();\r\n      ctx.moveTo(px,py);\r\n      ctx.lineTo(qx,qy);\r\n      ctx.stroke();\r\n    });\r\n    ctx.setLineDash([]);\r\n\r\n  }, [zoneW, zoneH, polygonPoints, closed, placements, margin]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{\r\n        border: '1px solid #333',\r\n        cursor: dragging?'grabbing':'grab',\r\n        marginTop: 20\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}