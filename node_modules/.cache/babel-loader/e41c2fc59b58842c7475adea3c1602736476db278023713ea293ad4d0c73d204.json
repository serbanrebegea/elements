{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder (2)\\\\src\\\\components\\\\LayoutCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  zoneW,\n  zoneH,\n  polygonPoints,\n  isPolygonClosed,\n  placements,\n  margin,\n  // in meters (0.207)\n  onCanvasClick // optional, only if you still use click-to-add\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const scale = 100; // 100 px = 1 m\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // resize to match room bounding‑box\n    canvas.width = zoneW * scale;\n    canvas.height = zoneH * scale;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // 1) Draw original polygon\n    if (polygonPoints.length) {\n      ctx.strokeStyle = '#0066CC';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      polygonPoints.forEach((pt, i) => {\n        const x = pt.x * scale,\n          y = pt.y * scale;\n        i === 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      });\n      if (isPolygonClosed) ctx.closePath();\n      ctx.stroke();\n\n      // draw vertices\n      polygonPoints.forEach(pt => {\n        ctx.fillStyle = '#CC0000';\n        ctx.beginPath();\n        ctx.arc(pt.x * scale, pt.y * scale, 4, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    }\n\n    // 2) Draw tiles\n    placements.forEach(tile => {\n      ctx.fillStyle = '#DDDDDD';\n      ctx.strokeStyle = '#333';\n      ctx.lineWidth = 1;\n      ctx.fillRect(tile.x * scale, tile.y * scale, tile.width * scale, tile.height * scale);\n      ctx.strokeRect(tile.x * scale, tile.y * scale, tile.width * scale, tile.height * scale);\n    });\n\n    // 3) Draw 207 mm margin around the FINAL tile‐shape\n    if (placements.length) {\n      // compute min/max of tile extents\n      let minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n      placements.forEach(t => {\n        minX = Math.min(minX, t.x);\n        minY = Math.min(minY, t.y);\n        maxX = Math.max(maxX, t.x + t.width);\n        maxY = Math.max(maxY, t.y + t.height);\n      });\n      const m = margin; // 0.207 m\n      ctx.strokeStyle = '#FF0000';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([5, 3]); // dashed for clarity\n      ctx.strokeRect((minX - m) * scale, (minY - m) * scale, (maxX - minX + 2 * m) * scale, (maxY - minY + 2 * m) * scale);\n      ctx.setLineDash([]);\n    }\n  }, [zoneW, zoneH, polygonPoints, isPolygonClosed, placements, margin]);\n  const handleClick = e => {\n    if (!onCanvasClick) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / scale;\n    const y = (e.clientY - rect.top) / scale;\n    onCanvasClick(x, y);\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    onClick: handleClick,\n    style: {\n      border: '1px solid #333',\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","LayoutCanvas","zoneW","zoneH","polygonPoints","isPolygonClosed","placements","margin","onCanvasClick","_s","canvasRef","scale","canvas","current","ctx","getContext","width","height","clearRect","length","strokeStyle","lineWidth","beginPath","forEach","pt","i","x","y","moveTo","lineTo","closePath","stroke","fillStyle","arc","Math","PI","fill","tile","fillRect","strokeRect","minX","Infinity","minY","maxX","maxY","t","min","max","m","setLineDash","handleClick","e","rect","getBoundingClientRect","clientX","left","clientY","top","ref","onClick","style","border","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/New folder (2)/src/components/LayoutCanvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nexport default function LayoutCanvas({\r\n  zoneW,\r\n  zoneH,\r\n  polygonPoints,\r\n  isPolygonClosed,\r\n  placements,\r\n  margin,         // in meters (0.207)\r\n  onCanvasClick   // optional, only if you still use click-to-add\r\n}) {\r\n  const canvasRef = useRef(null);\r\n  const scale = 100; // 100 px = 1 m\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // resize to match room bounding‑box\r\n    canvas.width  = zoneW * scale;\r\n    canvas.height = zoneH * scale;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // 1) Draw original polygon\r\n    if (polygonPoints.length) {\r\n      ctx.strokeStyle = '#0066CC';\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n      polygonPoints.forEach((pt, i) => {\r\n        const x = pt.x * scale, y = pt.y * scale;\r\n        i === 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\r\n      });\r\n      if (isPolygonClosed) ctx.closePath();\r\n      ctx.stroke();\r\n\r\n      // draw vertices\r\n      polygonPoints.forEach(pt => {\r\n        ctx.fillStyle = '#CC0000';\r\n        ctx.beginPath();\r\n        ctx.arc(pt.x * scale, pt.y * scale, 4, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      });\r\n    }\r\n\r\n    // 2) Draw tiles\r\n    placements.forEach(tile => {\r\n      ctx.fillStyle   = '#DDDDDD';\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth   = 1;\r\n      ctx.fillRect(\r\n        tile.x * scale,\r\n        tile.y * scale,\r\n        tile.width * scale,\r\n        tile.height * scale\r\n      );\r\n      ctx.strokeRect(\r\n        tile.x * scale,\r\n        tile.y * scale,\r\n        tile.width * scale,\r\n        tile.height * scale\r\n      );\r\n    });\r\n\r\n    // 3) Draw 207 mm margin around the FINAL tile‐shape\r\n    if (placements.length) {\r\n      // compute min/max of tile extents\r\n      let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n      placements.forEach(t => {\r\n        minX = Math.min(minX,      t.x);\r\n        minY = Math.min(minY,      t.y);\r\n        maxX = Math.max(maxX, t.x + t.width);\r\n        maxY = Math.max(maxY, t.y + t.height);\r\n      });\r\n\r\n      const m = margin; // 0.207 m\r\n      ctx.strokeStyle = '#FF0000';\r\n      ctx.lineWidth   = 2;\r\n      ctx.setLineDash([5,3]); // dashed for clarity\r\n      ctx.strokeRect(\r\n        (minX - m) * scale,\r\n        (minY - m) * scale,\r\n        ( (maxX - minX) + 2*m ) * scale,\r\n        ( (maxY - minY) + 2*m ) * scale\r\n      );\r\n      ctx.setLineDash([]); \r\n    }\r\n\r\n  }, [zoneW, zoneH, polygonPoints, isPolygonClosed, placements, margin]);\r\n\r\n  const handleClick = e => {\r\n    if (!onCanvasClick) return;\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = (e.clientX - rect.left) / scale;\r\n    const y = (e.clientY - rect.top)  / scale;\r\n    onCanvasClick(x, y);\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      onClick={handleClick}\r\n      style={{ border: '1px solid #333', marginTop: 20 }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}